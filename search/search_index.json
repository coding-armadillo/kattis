{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#kattis","title":"Kattis","text":""},{"location":"#summary-by-difficulty","title":"Summary by Difficulty","text":"<ul> <li> <p>Easy 373</p> </li> <li> <p>Medium 17</p> </li> <li> <p>Hard 1</p> </li> </ul>"},{"location":"#summary-by-initial","title":"Summary by Initial","text":""},{"location":"#summary-by-language","title":"Summary by Language","text":"<p>Thanks to all 5 contributors.</p>"},{"location":"easy/","title":"Difficulty - Easy (as of 2023-05-15)","text":""},{"location":"easy/#3d-printed-statues","title":"3D Printed Statues","text":"Solutions in 3 languages GoJavaPython <pre><code>package main\nimport (\n\"fmt\"\n\"math\"\n)\nfunc main() {\nvar n int\nfmt.Scan(&amp;n)\nd := 1.0\nfor math.Pow(2, d-1) &lt; float64(n) {\nd += 1\n}\nfmt.Println(d)\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass ThreeDPrintedStatues {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint n = s.nextInt();\nint d = 1;\nwhile (Math.pow(2, d - 1) &lt; n) {\nd += 1;\n}\nSystem.out.println(d);\n}\n}\n</code></pre> <pre><code>n = int(input())\nd = 1\nwhile 2 ** (d - 1) &lt; n:\nd += 1\nprint(d)\n</code></pre>"},{"location":"easy/#99-problems","title":"99 Problems","text":"Solution in Python Python <pre><code>import math\nn = int(input())\nceil = math.ceil(n / 100) * 100 - 1\nfloor = math.floor(n / 100) * 100 - 1\nif ceil == floor:\nprint(ceil)\nelse:\nif abs(ceil - n) &lt;= abs(n - floor) or floor &lt; 0:\nprint(ceil)\nelse:\nprint(floor)\n</code></pre>"},{"location":"easy/#aaah","title":"Aaah!","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n\"strings\"\n)\nfunc main() {\nvar a, b string\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nif strings.Count(a, \"a\") &gt;= strings.Count(b, \"a\") {\nfmt.Println(\"go\")\n} else {\nfmt.Println(\"no\")\n}\n}\n</code></pre> <pre><code>a, b = input(), input()\nif a.count(\"a\") &gt;= b.count(\"a\"):\nprint(\"go\")\nelse:\nprint(\"no\")\n</code></pre>"},{"location":"easy/#abc","title":"ABC","text":"Solution in Python Python <pre><code>numbers = sorted([int(d) for d in input().split()])\norders = list(input())\norder_map = {\n\"A\": 0,\n\"B\": 1,\n\"C\": 2,\n}\nprint(\" \".join([str(numbers[order_map[o]]) for o in orders]))\n</code></pre>"},{"location":"easy/#above-average","title":"Above Average","text":"Solution in Python Python <pre><code>n = int(input())\nfor _ in range(n):\nnumbers = [int(d) for d in input().split()[1:]]\nave = sum(numbers) / len(numbers)\nabove_ave = [d &gt; ave for d in numbers]\nprint(f\"{sum(above_ave)/len(numbers):.3%}\")\n</code></pre>"},{"location":"easy/#acm-contest-scoring","title":"ACM Contest Scoring","text":"Solution in Python Python <pre><code>problems = {}\nsolved = set()\nwhile True:\nline = input()\nif line == \"-1\":\nbreak\nt, p, ans = line.split()\nt = int(t)\nif p in solved:\ncontinue\nif p not in problems:\nproblems[p] = [(t, ans)]\nelse:\nproblems[p].append((t, ans))\nif ans == \"right\":\nsolved.add(p)\nscore = 0\nfor p in problems:\nt, ans = problems[p][-1]\nif ans == \"right\":\nscore += t + 20 * len(problems[p][:-1])\nprint(len(solved), score)\n</code></pre>"},{"location":"easy/#adding-trouble","title":"Adding Trouble","text":"Solution in Python Python <pre><code>a, b, c = [int(v) for v in input().split()]\nif a + b == c:\nprint(\"correct!\")\nelse:\nprint(\"wrong!\")\n</code></pre>"},{"location":"easy/#add-two-numbers","title":"Add Two Numbers","text":"Solutions in 4 languages GoJavaJavaScriptPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a, b int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nfmt.Println(a + b)\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass AddTwoNumbers {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint a = s.nextInt(), b = s.nextInt();\nSystem.out.println(a + b);\n}\n}\n</code></pre> <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (line) =&gt; {\n[a, b] = line\n.trim()\n.split(\" \")\n.map((e) =&gt; parseInt(e));\nconsole.log(a + b);\n});\n</code></pre> <pre><code>line = input()\na, b = line.split()\na = int(a)\nb = int(b)\nprint(a + b)\n</code></pre>"},{"location":"easy/#akcija","title":"Akcija","text":"Solution in Python Python <pre><code>n = int(input())\nc = [int(input()) for _ in range(n)]\nc = sorted(c, reverse=True)\ngroups = [c[i : i + 3] if i + 3 &lt; n else c[i:] for i in range(0, n, 3)]\nprint(sum(sum(g if len(g) &lt; 3 else g[:2]) for g in groups))\n</code></pre>"},{"location":"easy/#alphabet-spam","title":"Alphabet Spam","text":"Solution in Python Python <pre><code>s = input()\ntotal = len(s)\nwhites = s.count(\"_\")\nlowers = len([c for c in s if ord(c) &gt;= ord(\"a\") and ord(c) &lt;= ord(\"z\")])\nuppers = len([c for c in s if ord(c) &gt;= ord(\"A\") and ord(c) &lt;= ord(\"Z\")])\nsymbols = total - whites - lowers - uppers\nprint(f\"{whites/total:.15f}\")\nprint(f\"{lowers/total:.15f}\")\nprint(f\"{uppers/total:.15f}\")\nprint(f\"{symbols/total:.15f}\")\n</code></pre>"},{"location":"easy/#amsterdam-distance","title":"Amsterdam Distance","text":"Solution in Python Python <pre><code>import math\nm, n, r = input().split()\nm = int(m)\nn = int(n)\nr = float(r)\ncoords = [int(d) for d in input().split()]\np = r / n\ndist1 = 0\ndist1 += p * abs(coords[1] - coords[3])\ndist1 += (\nmath.pi\n* r\n* ((min(coords[3], coords[1]) if coords[3] != coords[1] else coords[1]) / n)\n* (abs(coords[0] - coords[2]) / m)\n)\ndist2 = p * abs(coords[1] + coords[3])\nprint(min(dist1, dist2))\n</code></pre>"},{"location":"easy/#a-new-alphabet","title":"A New Alphabet","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"bufio\"\n\"fmt\"\n\"os\"\n\"strings\"\n)\nfunc main() {\nmapping := map[string]string{\n\"a\": \"@\",\n\"b\": \"8\",\n\"c\": \"(\",\n\"d\": \"|)\",\n\"e\": \"3\",\n\"f\": \"#\",\n\"g\": \"6\",\n\"h\": \"[-]\",\n\"i\": \"|\",\n\"j\": \"_|\",\n\"k\": \"|&lt;\",\n\"l\": \"1\",\n\"m\": \"[]\\\\/[]\",\n\"n\": \"[]\\\\[]\",\n\"o\": \"0\",\n\"p\": \"|D\",\n\"q\": \"(,)\",\n\"r\": \"|Z\",\n\"s\": \"$\",\n\"t\": \"']['\",\n\"u\": \"|_|\",\n\"v\": \"\\\\/\",\n\"w\": \"\\\\/\\\\/\",\n\"x\": \"}{\",\n\"y\": \"`/\",\n\"z\": \"2\",\n}\nscanner := bufio.NewScanner(os.Stdin)\nscanner.Scan()\nline := scanner.Text()\nrunes := []rune(strings.ToLower(line))\nfor i := 0; i &lt; len(runes); i++ {\nv, ok := mapping[string(runes[i])]\nif ok {\nfmt.Printf(v)\n} else {\nfmt.Printf(string(runes[i]))\n}\n}\n}\n</code></pre> <pre><code>mapping = {\n\"a\": \"@\",\n\"b\": \"8\",\n\"c\": \"(\",\n\"d\": \"|)\",\n\"e\": \"3\",\n\"f\": \"#\",\n\"g\": \"6\",\n\"h\": \"[-]\",\n\"i\": \"|\",\n\"j\": \"_|\",\n\"k\": \"|&lt;\",\n\"l\": \"1\",\n\"m\": \"[]\\\\/[]\",\n\"n\": \"[]\\\\[]\",\n\"o\": \"0\",\n\"p\": \"|D\",\n\"q\": \"(,)\",\n\"r\": \"|Z\",\n\"s\": \"$\",\n\"t\": \"']['\",\n\"u\": \"|_|\",\n\"v\": \"\\\\/\",\n\"w\": \"\\\\/\\\\/\",\n\"x\": \"}{\",\n\"y\": \"`/\",\n\"z\": \"2\",\n}\nprint(\"\".join([mapping.get(c, c) for c in input().lower()]))\n</code></pre>"},{"location":"easy/#another-brick-in-the-wall","title":"Another Brick in the Wall","text":"Solution in Python Python <pre><code>h, w, n = [int(d) for d in input().split()]\nb = [int(d) for d in input().split()]\ni, tw, th, done = 0, 0, 0, False\nwhile i &lt; n:\nif tw + b[i] &lt;= w:\ntw += b[i]\nif tw == w:\ntw = 0\nth += 1\nif th == h and tw == 0:\ndone = True\nbreak\nelse:\nbreak\ni += 1\nprint(\"YES\" if done else \"NO\")\n</code></pre>"},{"location":"easy/#apaxiaaaaaaaaaaaans","title":"Apaxiaaaaaaaaaaaans!","text":"Solution in Python Python <pre><code>name = input()\ncompact = \"\"\nfor s in name:\nif not compact or s != compact[-1]:\ncompact += s\nprint(compact)\n</code></pre>"},{"location":"easy/#honour-thy-apaxian-parent","title":"Honour Thy (Apaxian) Parent","text":"Solution in Python Python <pre><code>y, p = input().split()\nif y.endswith(\"e\"):\nname = y + \"x\" + p\nelif y[-1] in \"aiou\":\nname = y[:-1] + \"ex\" + p\nelif y.endswith(\"ex\"):\nname = y + p\nelse:\nname = y + \"ex\" + p\nprint(name)\n</code></pre>"},{"location":"easy/#a-real-challenge","title":"A Real Challenge","text":"Solutions in 3 languages GoJavaScriptPython <pre><code>package main\nimport (\n\"fmt\"\n\"math\"\n)\nfunc main() {\nvar a int\nfmt.Scan(&amp;a)\nfmt.Println(4 * math.Sqrt(float64(a)))\n}\n</code></pre> <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (a) =&gt; {\nconsole.log(4 * Math.sqrt(parseInt(a)));\n});\n</code></pre> <pre><code>import math\ns = int(input())\nprint(4 * math.sqrt(s))\n</code></pre>"},{"location":"easy/#are-you-listening","title":"Are You Listening?","text":"Solution in Python Python <pre><code>import math\ncx, cy, n = [int(d) for d in input().split()]\nd = []\nfor _ in range(n):\nx, y, r = [int(d) for d in input().split()]\nd.append(((x - cx) ** 2 + (y - cy) ** 2) ** 0.5 - r)\nv = sorted(d)[2]\nprint(math.floor(v) if v &gt; 0 else 0)\n</code></pre>"},{"location":"easy/#arithmetic-functions","title":"Arithmetic Functions","text":"Solution in C++ C++ <pre><code>#include \"arithmeticfunctions.h\"\n// Compute x^3\nint cube(int x)\n{\nreturn x * x * x;\n}\n// Compute the maximum of x and y\nint max(int x, int y)\n{\nif (x &gt; y)\n{\nreturn x;\n}\nelse\n{\nreturn y;\n}\n}\n// Compute x - y\nint difference(int x, int y)\n{\nreturn x - y;\n}\n</code></pre>"},{"location":"easy/#army-strength-easy","title":"Army Strength (Easy)","text":"Solution in Python Python <pre><code>t = int(input())\nfor _ in range(t):\ninput()\nng, nm = [int(d) for d in input().split()]\ng = [int(d) for d in input().split()]\nm = [int(d) for d in input().split()]\nif max(m) &gt; max(g):\nprint(\"MechaGodzilla\")\nelse:\nprint(\"Godzilla\")\n</code></pre>"},{"location":"easy/#army-strength-hard","title":"Army Strength (Hard)","text":"Solution in Python Python <pre><code>t = int(input())\nfor _ in range(t):\ninput()\nng, nm = [int(d) for d in input().split()]\ng = [int(d) for d in input().split()]\nm = [int(d) for d in input().split()]\nif max(m) &gt; max(g):\nprint(\"MechaGodzilla\")\nelse:\nprint(\"Godzilla\")\n</code></pre>"},{"location":"easy/#astrological-sign","title":"Astrological Sign","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nd, m = input().split()\nd = int(d)\nif (m == \"Mar\" and d &gt;= 21) or (m == \"Apr\" and d &lt;= 20):\nprint(\"Aries\")\nelif (m == \"Apr\" and d &gt;= 21) or (m == \"May\" and d &lt;= 20):\nprint(\"Taurus\")\nelif (m == \"May\" and d &gt;= 21) or (m == \"Jun\" and d &lt;= 21):\nprint(\"Gemini\")\nelif (m == \"Jun\" and d &gt;= 22) or (m == \"Jul\" and d &lt;= 22):\nprint(\"Cancer\")\nelif (m == \"Jul\" and d &gt;= 23) or (m == \"Aug\" and d &lt;= 22):\nprint(\"Leo\")\nelif (m == \"Aug\" and d &gt;= 23) or (m == \"Sep\" and d &lt;= 21):\nprint(\"Virgo\")\nelif (m == \"Sep\" and d &gt;= 22) or (m == \"Oct\" and d &lt;= 22):\nprint(\"Libra\")\nelif (m == \"Oct\" and d &gt;= 23) or (m == \"Nov\" and d &lt;= 22):\nprint(\"Scorpio\")\nelif (m == \"Nov\" and d &gt;= 23) or (m == \"Dec\" and d &lt;= 21):\nprint(\"Sagittarius\")\nelif (m == \"Dec\" and d &gt;= 22) or (m == \"Jan\" and d &lt;= 20):\nprint(\"Capricorn\")\nelif (m == \"Jan\" and d &gt;= 21) or (m == \"Feb\" and d &lt;= 19):\nprint(\"Aquarius\")\nelif (m == \"Feb\" and d &gt;= 20) or (m == \"Mar\" and d &lt;= 20):\nprint(\"Pisces\")\n</code></pre>"},{"location":"easy/#autori","title":"Autori","text":"Solution in Python Python <pre><code>print(\"\".join([part[0] for part in input().split(\"-\")]))\n</code></pre>"},{"location":"easy/#average-character","title":"Average Character","text":"Solution in Python Python <pre><code>s = input()\ns = [ord(c) for c in s]\ns = sum(s) // len(s)\nprint(chr(s))\n</code></pre>"},{"location":"easy/#avion","title":"Avion","text":"Solution in Python Python <pre><code>ans = []\nfor i in range(5):\nrow = input()\nif \"FBI\" in row:\nans.append(str(i + 1))\nif not ans:\nprint(\"HE GOT AWAY!\")\nelse:\nprint(\" \".join(ans))\n</code></pre>"},{"location":"easy/#babelfish","title":"Babelfish","text":"Solution in Python Python <pre><code>d = []\nwhile True:\nline = input()\nif not line:\nbreak\nw, f = line.split()\nd.append((f, w))\nd = dict(d)\nwhile True:\ntry:\nline = input()\nexcept:\nbreak\nprint(d.get(line, \"eh\"))\n</code></pre>"},{"location":"easy/#baby-bites","title":"Baby Bites","text":"Solution in Python Python <pre><code>n = int(input())\na = input().split()\nc = [str(d) for d in range(1, n + 1)]\ninplace = [i == j if i.isnumeric() and j.isnumeric() else None for i, j in zip(a, c)]\ninplace = [v for v in inplace if v is not None]\nprint(\"makes sense\" if all(inplace) else \"something is fishy\")\n</code></pre>"},{"location":"easy/#baby-panda","title":"Baby Panda","text":"Solution in Python Python <pre><code>import math\nn, m = [int(d) for d in input().split()]\nd = 0\nwhile m:\nc = math.floor(math.log(m, 2))\nd += 1\nm -= 2**c\nprint(d)\n</code></pre>"},{"location":"easy/#backspace","title":"Backspace","text":"Solution in Python Python <pre><code>ans = []\nfor c in input():\nif c != \"&lt;\":\nans.append(c)\nelse:\nans.pop()\nprint(\"\".join(ans))\n</code></pre>"},{"location":"easy/#bacon-eggs-and-spam","title":"Bacon, Eggs, and Spam","text":"Solution in Python Python <pre><code>while True:\nn = int(input())\nif not n:\nbreak\nrecord = {}\nfor _ in range(n):\norder = input().split()\nname = order[0]\nitems = order[1:]\nfor item in items:\nif item not in record:\nrecord[item] = [name]\nelse:\nrecord[item].append(name)\nfor name in sorted(record):\nprint(name, \" \".join(sorted(record[name])))\nprint()\n</code></pre>"},{"location":"easy/#basketball-one-on-one","title":"Basketball One-on-One","text":"Solutions in 2 languages JavaPython <pre><code>import java.util.Scanner;\nclass BasketballOneOnOne {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nString scores = s.nextLine();\nSystem.out.println(scores.charAt(scores.length() - 2));\n}\n}\n</code></pre> <pre><code>scores = input()\nsize = len(scores)\na = sum([int(scores[i + 1]) for i in range(size) if scores[i] == \"A\"])\nb = sum([int(scores[i + 1]) for i in range(size) if scores[i] == \"B\"])\nif a &gt; b:\nprint(\"A\")\nelse:\nprint(\"B\")\n</code></pre>"},{"location":"easy/#batter-up","title":"Batter Up","text":"Solution in Python Python <pre><code>_ = input()\nat_bats = [int(d) for d in input().split()]\nans = [d for d in at_bats if d &gt;= 0]\nprint(sum(ans) / len(ans))\n</code></pre>"},{"location":"easy/#beat-the-spread","title":"Beat the Spread!","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\na, b = [int(d) for d in input().split()]\nif a &lt; b or (a + b) % 2:\nprint(\"impossible\")\nelse:\nprint((a + b) // 2, (a - b) // 2)\n</code></pre>"},{"location":"easy/#beavergnaw","title":"Beavergnaw","text":"Solution in Python Python <pre><code>import math\nwhile True:\nD, V = [int(d) for d in input().split()]\nif not D and not V:\nbreak\n# R = D / 2\n# r = d / 2\n# V + \u03c0 * (r**2) * (2*r) + 2 * (1/3) * \u03c0 * (R-r) * (r**2 + r*R + R**2) == \u03c0 * (R**2) * (2*R)\nprint(math.pow(D**3 - 6 * V / math.pi, 1 / 3))\n</code></pre>"},{"location":"easy/#bela","title":"Bela","text":"Solution in Python Python <pre><code>table = {\n\"A\": {True: 11, False: 11},\n\"K\": {True: 4, False: 4},\n\"Q\": {True: 3, False: 3},\n\"J\": {True: 20, False: 2},\n\"T\": {True: 10, False: 10},\n\"9\": {True: 14, False: 0},\n\"8\": {True: 0, False: 0},\n\"7\": {True: 0, False: 0},\n}\nn, b = input().split()\nn = int(n)\ntotal = 0\nfor _ in range(4 * n):\ncard = input()\nf, s = card[0], card[1]\ntotal += table[f][s == b]\nprint(total)\n</code></pre>"},{"location":"easy/#betting","title":"Betting","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a float32\nfmt.Scan(&amp;a)\nfmt.Printf(\"%.10f\", 100/a)\nfmt.Println()\nfmt.Printf(\"%.10f\", 100/(100-a))\n}\n</code></pre> <pre><code>a = int(input())\nprint(f\"{100/a:.10f}\")\nprint(f\"{100/(100-a):.10f}\")\n</code></pre>"},{"location":"easy/#bijele","title":"Bijele","text":"Solution in Python Python <pre><code>should_contain = (1, 1, 2, 2, 2, 8)\nfound = [int(d) for d in input().split()]\nprint(\" \".join([str(a - b) for a, b in zip(should_contain, found)]))\n</code></pre>"},{"location":"easy/#black-friday","title":"Black Friday","text":"Solution in Python Python <pre><code>from collections import Counter\nn = input()\na = [int(d) for d in input().split()]\nc = Counter(a)\nkeys = [k for k in c if c[k] == 1]\nif not keys:\nprint(\"none\")\nelse:\nprint(a.index(max(keys)) + 1)\n</code></pre>"},{"location":"easy/#blueberry-waffle","title":"Blueberry Waffle","text":"Solution in Python Python <pre><code>r, f = [int(d) for d in input().split()]\na = f // r\nb = (f - a * r) / r &gt;= 0.5\nprint(\"up\" if (a + b) % 2 == 0 else \"down\")\n</code></pre>"},{"location":"easy/#bluetooth","title":"Bluetooth","text":"Solution in Python Python <pre><code>n = int(input())\ncond = {}\ndef f(t):\nif t[0].isdigit():\nreturn (f'R{\"u\" if t[1]==\"+\" else \"l\"}', t[0])\nelse:\nreturn (f'L{\"u\" if t[0]==\"+\" else \"l\"}', t[1])\nfor _ in range(n):\nt, p = input().split()\nq, d = f(t)\nif p == \"b\":\nif p not in cond:\ncond[p] = [q]\nelse:\ncond[p].append(q)\nelif p == \"m\":\nif p not in cond:\ncond[p] = [(q, d)]\nelse:\ncond[p].append((q, d))\nl, r = True, True\nif \"R\" in [c[0] for c in cond.get(\"b\", [])]:\nr = False\nif \"L\" in [c[0] for c in cond.get(\"b\", [])]:\nl = False\nru = len([d for q, d in cond.get(\"m\", []) if q == \"Ru\"])\nrl = len([d for q, d in cond.get(\"m\", []) if q == \"Rl\"])\nlu = len([d for q, d in cond.get(\"m\", []) if q == \"Lu\"])\nll = len([d for q, d in cond.get(\"m\", []) if q == \"Ll\"])\nif ru == 8 or rl == 8:\nr = False\nif lu == 8 or ll == 8:\nl = False\nif not l and not r:\nprint(2)\nelif l and not r:\nprint(0)\nelif r and not l:\nprint(1)\nelse:\nprint(\"?\")\n</code></pre>"},{"location":"easy/#boat-parts","title":"Boat Parts","text":"Solution in Python Python <pre><code>p, n = [int(d) for d in input().split()]\nboat = set()\nd = -1\nfor i in range(n):\nw = input()\nboat.add(w)\nif len(boat) == p:\nd = i + 1\nbreak\nif d == -1:\nprint(\"paradox avoided\")\nelse:\nprint(d)\n</code></pre>"},{"location":"easy/#booking-a-room","title":"Booking a Room","text":"Solution in Python Python <pre><code>r, n = [int(d) for d in input().split()]\nbooked = [int(input()) for _ in range(n)]\navailable = set(range(1, 1 + r)) - set(booked)\nprint(\"too late\" if r == n else available.pop())\n</code></pre>"},{"location":"easy/#boss-battle","title":"Boss Battle","text":"Solution in Python Python <pre><code>n = int(input())\nprint(n - 2 if n // 4 else 1)\n</code></pre>"},{"location":"easy/#bounding-robots","title":"Bounding Robots","text":"Solution in Python Python <pre><code>while True:\nroom_x, room_y = [int(d) for d in input().split()]\nif not room_x and not room_y:\nbreak\nrobot_x, robot_y = 0, 0\nactual_x, actual_y = 0, 0\nn = int(input())\nfor _ in range(n):\ndirection, step = input().split()\nstep = int(step)\nif direction == \"u\":\nrobot_y += step\nactual_y = min(room_y - 1, actual_y + step)\nelif direction == \"d\":\nrobot_y -= step\nactual_y = max(0, actual_y - step)\nelif direction == \"r\":\nrobot_x += step\nactual_x = min(room_x - 1, actual_x + step)\nelif direction == \"l\":\nrobot_x -= step\nactual_x = max(0, actual_x - step)\nprint(f\"Robot thinks {robot_x} {robot_y}\")\nprint(f\"Actually at {actual_x} {actual_y}\")\nprint()\n</code></pre>"},{"location":"easy/#bracket-matching","title":"Bracket Matching","text":"Solution in Python Python <pre><code>n = int(input())\ns = input()\nstack = []\nis_valid = True\nfor i in range(n):\nc = s[i]\nif c in (\"(\", \"[\", \"{\"):\nstack.append(c)\nelse:\nif len(stack) == 0:\nis_valid = False\nbreak\nlast = stack.pop()\nif c == \")\" and last != \"(\":\nis_valid = False\nbreak\nif c == \"]\" and last != \"[\":\nis_valid = False\nbreak\nif c == \"}\" and last != \"{\":\nis_valid = False\nbreak\nprint(\"Valid\" if is_valid and not len(stack) else \"Invalid\")\n</code></pre>"},{"location":"easy/#breaking-branches","title":"Breaking Branches","text":"Solutions in 5 languages GoHaskellJavaJavaScriptPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar n int\nfmt.Scan(&amp;n)\nif n%2 == 0 {\nfmt.Println(\"Alice\")\nfmt.Println(1)\n} else {\nfmt.Println(\"Bob\")\n}\n}\n</code></pre> <pre><code>main = do\ninput &lt;- getLine\nlet n = (read input :: Int)\nif  n `mod` 2  ==  0\nthen do putStrLn \"Alice\"\nputStrLn \"1\"\nelse putStrLn \"Bob\"\n</code></pre> <pre><code>import java.util.Scanner;\nclass BreakingBranches {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint n = s.nextInt();\nif (n % 2 == 0) {\nSystem.out.println(\"Alice\");\nSystem.out.println(1);\n} else {\nSystem.out.println(\"Bob\");\n}\n}\n}\n</code></pre> <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (n) =&gt; {\nif (parseInt(n) % 2) {\nconsole.log(\"Bob\");\n} else {\nconsole.log(\"Alice\");\nconsole.log(1);\n}\n});\n</code></pre> <pre><code>n = int(input())\nif n % 2:\nprint(\"Bob\")\nelse:\nprint(\"Alice\")\nprint(1)\n</code></pre>"},{"location":"easy/#broken-calculator","title":"Broken Calculator","text":"Solution in Python Python <pre><code>prev = 1\nfor _ in range(int(input())):\na, op, b = input().split()\na, b = int(a), int(b)\nif op == \"+\":\nans = a + b - prev\nelif op == \"-\":\nans = (a - b) * prev\nelif op == \"*\":\nans = (a * b) ** 2\nelif op == \"/\":\nans = (a + 1) // 2 if a % 2 else a // 2\nprint(ans)\nprev = ans\n</code></pre>"},{"location":"easy/#broken-swords","title":"Broken Swords","text":"Solution in Python Python <pre><code>tb, lr = 0, 0\nfor _ in range(int(input())):\ns = input()\ntb += s[:2].count(\"0\")\nlr += s[2:].count(\"0\")\nswords = min(tb, lr) // 2\ntb -= swords * 2\nlr -= swords * 2\nprint(f\"{swords} {tb} {lr}\")\n</code></pre>"},{"location":"easy/#buka","title":"Buka","text":"Solution in Python Python <pre><code>a, op, b = input(), input(), input()\npa, pb = a.count(\"0\"), b.count(\"0\")\nif op == \"*\":\nprint(f\"1{'0'*(pa+pb)}\")\nelif op == \"+\":\nif pa == pb:\nans = f\"2{'0'*pa}\"\nelse:\nans = f\"1{'0'*(abs(pa-pb)-1)}1{'0'*min(pa,pb)}\"\nprint(ans)\n</code></pre>"},{"location":"easy/#bus","title":"Bus","text":"Solution in Python Python <pre><code>def f(n):\nif n == 1:\nreturn 1\nelse:\nreturn int(2 * (f(n - 1) + 0.5))\nfor _ in range(int(input())):\nprint(f(int(input())))\n</code></pre>"},{"location":"easy/#bus-numbers","title":"Bus Numbers","text":"Solution in Python Python <pre><code>n = int(input())\nnumbers = sorted([int(d) for d in input().split()])\nprev = numbers[0]\nans = {prev: 1}\nfor i in range(1, n):\nif numbers[i] == prev + ans[prev]:\nans[prev] += 1\nelse:\nprev = numbers[i]\nans[prev] = 1\nprint(\n\" \".join(\n[\nf\"{key}-{key+value-1}\"\nif value &gt; 2\nelse \" \".join([str(d) for d in range(key, key + value)])\nfor key, value in ans.items()\n]\n)\n)\n</code></pre>"},{"location":"easy/#calories-from-fat","title":"Calories From Fat","text":"Solution in Python Python <pre><code>mapping = {\"fat\": 9, \"protein\": 4, \"sugar\": 4, \"starch\": 4, \"alcohol\": 7}\ndef c(x, category):\nif \"g\" in x:\nreturn (int(x[:-1]) * mapping[category], \"C\")\nelif \"C\" in x:\nreturn (int(x[:-1]), \"C\")\nelif \"%\" in x:\nreturn (int(x[:-1]) / 100, \"%\")\ndef solve(items):\nfat_c, total_c = 0, 0\nfor fat, protein, sugar, starch, alcohol in items:\nfat_c += fat\ntotal_c += fat + protein + sugar + starch + alcohol\nreturn f\"{fat_c/total_c:.0%}\"\nitems = []\nwhile True:\ns = input()\nif s == \"-\":\nif not items:\nbreak\nprint(solve(items))\nitems = []\ncontinue\nfat, protein, sugar, starch, alcohol = s.split()\nmapping.keys()\ntotal_c, total_p = 0, 0\nreading = []\nfor v, k in zip(s.split(), mapping.keys()):\nn, t = c(v, k)\nif t == \"C\":\ntotal_c += n\nelif t == \"%\":\ntotal_p += n\nreading.append((n, t))\ntotal_c = total_c / (1 - total_p)\nitem = []\nfor n, t in reading:\nif t == \"%\":\nitem.append(n * total_c)\nelse:\nitem.append(n)\nitems.append(item)\n</code></pre>"},{"location":"easy/#canadians-eh","title":"Canadians, eh?","text":"Solutions in 3 languages GoJavaPython <pre><code>package main\nimport (\n\"bufio\"\n\"fmt\"\n\"os\"\n\"strings\"\n)\nfunc main() {\nscanner := bufio.NewScanner(os.Stdin)\nscanner.Scan()\nline := scanner.Text()\nif strings.HasSuffix(line, \"eh?\") {\nfmt.Println(\"Canadian!\")\n} else {\nfmt.Println(\"Imposter!\")\n}\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass CanadiansEh {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nString line = s.nextLine();\nif (line.endsWith(\"eh?\")) {\nSystem.out.println(\"Canadian!\");\n} else {\nSystem.out.println(\"Imposter!\");\n}\n}\n}\n</code></pre> <pre><code>line = input()\nif line.endswith(\"eh?\"):\nprint(\"Canadian!\")\nelse:\nprint(\"Imposter!\")\n</code></pre>"},{"location":"easy/#careful-ascent","title":"Careful Ascent","text":"Solution in Python Python <pre><code>a, b = [int(d) for d in input().split()]\nn = int(input())\nshields = []\nfor _ in range(n):\nl, u, f = input().split()\nl = int(l)\nu = int(u)\nf = float(f)\nshields.append((l, u, f))\nshields.append((b,))\ns = shields[0][0]\nfor i in range(n):\ns += (shields[i][1] - shields[i][0]) * shields[i][2]\ns += shields[i + 1][0] - shields[i][1]\nprint(f\"{a/s:.6f}\")\n</code></pre>"},{"location":"easy/#solving-for-carrots","title":"Solving for Carrots","text":"Solution in Python Python <pre><code>n, ans = [int(d) for d in input().split()]\nfor _ in range(n):\ninput()\nprint(ans)\n</code></pre>"},{"location":"easy/#cetiri","title":"Cetiri","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n\"sort\"\n)\nfunc main() {\nvar a, b, c int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nfmt.Scan(&amp;c)\ns := []int{a, b, c}\nsort.Ints(s)\na, b, c = s[0], s[1], s[2]\nif c-b == b-a {\nfmt.Println(c + c - b)\n} else if c-b &gt; b-a {\nfmt.Println(c - b + a)\n} else {\nfmt.Println(a + c - b)\n}\n}\n</code></pre> <pre><code>a, b, c = sorted([int(d) for d in input().split()])\nif c - b == b - a:\nprint(c + c - b)\nelif c - b &gt; b - a:\nprint(c - b + a)\nelse:\nprint(a + c - b)\n</code></pre>"},{"location":"easy/#cetvrta","title":"Cetvrta","text":"Solution in Python Python <pre><code>from collections import Counter\nx, y = Counter(), Counter()\nfor _ in range(3):\n_x, _y = [int(d) for d in input().split()]\nx[_x] += 1\ny[_y] += 1\nfor key in x:\nif x[key] == 1:\nprint(key, \" \")\nbreak\nfor key in y:\nif y[key] == 1:\nprint(key)\nbreak\n</code></pre>"},{"location":"easy/#chanukah-challenge","title":"Chanukah Challenge","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nk, n = [int(d) for d in input().split()]\nprint(k, int((1 + n) * n / 2 + n))\n</code></pre>"},{"location":"easy/#character-development","title":"Character Development","text":"Solution in Python Python <pre><code>def f(m):\nans = 0\nfor n in range(2, m + 1):\na, b = 1, 1\nfor i in range(m - n + 1, m + 1):\na *= i\nfor i in range(1, n + 1):\nb *= i\nans += a // b\nreturn ans\nprint(f(int(input())))\n</code></pre>"},{"location":"easy/#chocolate-division","title":"Chocolate Division","text":"Solution in Python Python <pre><code>r, c = [int(v) for v in input().split()]\nchocolate_bar_cuts = (r * c) - 1\nif chocolate_bar_cuts % 2 == 1:\nprint(\"Alf\")\nelse:\nprint(\"Beata\")\n</code></pre>"},{"location":"easy/#preludes","title":"Preludes","text":"Solution in Python Python <pre><code>alternatives = [(\"A#\", \"Bb\"), (\"C#\", \"Db\"), (\"D#\", \"Eb\"), (\"F#\", \"Gb\"), (\"G#\", \"Ab\")]\nm = dict(alternatives + [(b, a) for a, b in alternatives])\ni = 1\nwhile True:\ntry:\ns = input()\nexcept:\nbreak\nkey, tone = s.split()\nif key in m:\nprint(f\"Case {i}: {m[key]} {tone}\")\nelse:\nprint(f\"Case {i}: UNIQUE\")\ni += 1\n</code></pre>"},{"location":"easy/#cinema-crowds","title":"Cinema Crowds","text":"Solution in Python Python <pre><code>n, m = [int(v) for v in input().split()]\nsize = [int(v) for v in input().split()]\ngroups_admitted = 0\nfor i in range(m):\nif size[i] &lt;= n:\nn -= size[i]\ngroups_admitted += 1\nprint(m - groups_admitted)\n</code></pre>"},{"location":"easy/#cinema-crowds-2","title":"Cinema Crowds 2","text":"Solution in Python Python <pre><code>n, m = [int(t) for t in input().split()]\np = [int(t) for t in input().split()]\nd = 0\nl = 0\nfor i in range(m):\nif p[i] &gt; n - d:\nbreak\nelse:\nk = p[i]\nd += k\nl += 1\nprint(m - l)\n</code></pre>"},{"location":"easy/#class-field-trip","title":"Class Field Trip","text":"Solution in Python Python <pre><code>a = input()\nb = input()\ni, j = 0, 0\nans = []\nwhile i &lt; len(a) and j &lt; len(b):\nif a[i] &lt; b[j]:\nans.append(a[i])\ni += 1\nelse:\nans.append(b[j])\nj += 1\nans += a[i:] if i &lt; len(a) else b[j:]\nprint(\"\".join(ans))\n</code></pre>"},{"location":"easy/#a-furious-cocktail","title":"A Furious Cocktail","text":"Solution in Python Python <pre><code>n, t = [int(d) for d in input().split()]\np = [int(input()) for _ in range(n)]\np = sorted(p, reverse=True)\nending = p[0]\nable = True\nfor i in range(1, n):\nif t * i &gt;= ending:\nprint(\"NO\")\nable = False\nbreak\nif t * i + p[i] &lt; ending:\nending = t * i + p[i]\nif able:\nprint(\"YES\")\n</code></pre>"},{"location":"easy/#code-cleanups","title":"Code Cleanups","text":"Solution in Python Python <pre><code>n = int(input())\np = [int(d) for d in input().split()]\nprev = []\nt = 0\nfor v in p:\nif not prev:\nprev.append(v)\ncontinue\nd = (19 + sum(prev)) // len(prev)\nif v &lt;= d:\nprev.append(v)\nelse:\nprev = [v]\nt += 1\nif prev:\nt += 1\nprint(t)\n</code></pre>"},{"location":"easy/#code-to-save-lives","title":"Code to Save Lives","text":"Solution in Python Python <pre><code>t = int(input())\nfor _ in range(t):\na = int(input().replace(\" \", \"\"))\nb = int(input().replace(\" \", \"\"))\nprint(\" \".join(str(a + b)))\n</code></pre>"},{"location":"easy/#coffee-cup-combo","title":"Coffee Cup Combo","text":"Solution in Python Python <pre><code>n = int(input())\nawake = [0] * n\ns = list(input())\nfor i in range(n):\nif s[i] == \"1\":\nawake[i] = 1\nif i + 1 &lt; n:\nawake[i + 1] = 1\nif i + 2 &lt; n:\nawake[i + 2] = 1\nprint(sum(awake))\n</code></pre>"},{"location":"easy/#cold-puter-science","title":"Cold-puter Science","text":"Solution in Python Python <pre><code>_ = input()\nprint(len([t for t in input().split() if \"-\" in t]))\n</code></pre>"},{"location":"easy/#competitive-arcade-basketball","title":"Competitive Arcade Basketball","text":"Solution in Python Python <pre><code>from collections import Counter\nn, p, m = [int(d) for d in input().split()]\nrecords = Counter()\nwinners = []\nnames = [input() for _ in range(n)]\nfor r in range(m):\nname, point = input().split()\npoint = int(point)\nrecords[name] += point\nif records[name] &gt;= p and name not in winners:\nwinners.append(name)\nif not winners:\nprint(\"No winner!\")\nelse:\nprint(\"\\n\".join([f\"{n} wins!\" for n in winners]))\n</code></pre>"},{"location":"easy/#compound-words","title":"Compound Words","text":"Solution in Python Python <pre><code>from itertools import permutations\nl = []\nwhile True:\ntry:\nl.extend(input().split())\nexcept:\nbreak\nw = set()\nfor i, j in permutations(l, 2):\nw.add(f\"{i}{j}\")\nprint(\"\\n\".join(sorted(w)))\n</code></pre>"},{"location":"easy/#conformity","title":"Conformity","text":"Solution in Python Python <pre><code>from collections import Counter\nn = int(input())\nentries = []\nfor _ in range(n):\nentries.append(\" \".join(sorted(input().split())))\nsummary = Counter(entries)\npopular = max(summary.values())\nprint(sum([summary[e] for e in summary if summary[e] == popular]))\n</code></pre>"},{"location":"easy/#cryptographers-conundrum","title":"Cryptographer's Conundrum","text":"Solution in Python Python <pre><code>text = input()\ntotal = 0\nfor i in range(0, len(text), 3):\nif text[i] != \"P\":\ntotal += 1\nif text[i + 1] != \"E\":\ntotal += 1\nif text[i + 2] != \"R\":\ntotal += 1\nprint(total)\n</code></pre>"},{"location":"easy/#convex-polygon-area","title":"Convex Polygon Area","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nvalues = [int(d) for d in input().split()]\ncoords = values[1:]\nn = values[0]\ncoords.append(coords[0])\ncoords.append(coords[1])\narea = 0\nfor i in range(0, 2 * n, 2):\nx1, y1 = coords[i], coords[i + 1]\nx2, y2 = coords[i + 2], coords[i + 3]\narea += x1 * y2 - x2 * y1\nprint(0.5 * abs(area))\n</code></pre>"},{"location":"easy/#cooking-water","title":"Cooking Water","text":"Solution in Python Python <pre><code>n = int(input())\nlb, ub = 0, 1000\nfor _ in range(n):\na, b = [int(d) for d in input().split()]\nlb = max(lb, a)\nub = min(ub, b)\nif lb &gt; ub:\nprint(\"edward is right\")\nelse:\nprint(\"gunilla has a point\")\n</code></pre>"},{"location":"easy/#costume-contest","title":"Costume Contest","text":"Solution in Python Python <pre><code>from collections import Counter\nn = int(input())\nc = Counter()\nfor _ in range(n):\nc[input()] += 1\nprint(\"\\n\".join(sorted([k for k, v in c.items() if v == min(c.values())])))\n</code></pre>"},{"location":"easy/#counting-clauses","title":"Counting Clauses","text":"Solution in Python Python <pre><code>m, _ = [int(d) for d in input().split()]\nfor _ in range(m):\ninput()\nif m &gt;= 8:\nprint(\"satisfactory\")\nelse:\nprint(\"unsatisfactory\")\n</code></pre>"},{"location":"easy/#count-the-vowels","title":"Count the Vowels","text":"Solution in Python Python <pre><code>print(len([c for c in input().lower() if c in \"aeiou\"]))\n</code></pre>"},{"location":"easy/#course-scheduling","title":"Course Scheduling","text":"Solution in Python Python <pre><code>from collections import Counter\nc = Counter()\nn = {}\nfor _ in range(int(input())):\nr = input().split()\nname, course = \" \".join(r[:2]), r[-1]\nif course not in n:\nn[course] = set()\nif name not in n[course]:\nc[course] += 1\nn[course].add(name)\nfor k in sorted(c.keys()):\nprint(f\"{k} {c[k]}\")\n</code></pre>"},{"location":"easy/#cpr-number","title":"CPR Number","text":"Solution in Python Python <pre><code>cpr = input().replace(\"-\", \"\")\nvalues = [4, 3, 2, 7, 6, 5, 4, 3, 2, 1]\ntotal = 0\nfor d, v in zip(cpr, values):\ntotal += int(d) * v\nif not total % 11:\nprint(1)\nelse:\nprint(0)\n</code></pre>"},{"location":"easy/#crne","title":"Crne","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n)\nfunc main() {\nvar n int\nfmt.Scan(&amp;n)\na := n / 2\nb := n - a\nfmt.Println((a + 1) * (b + 1))\n}\n</code></pre> <pre><code>n = int(input())\na = n // 2\nb = n - a\nprint((a + 1) * (b + 1))\n</code></pre>"},{"location":"easy/#cudoviste","title":"Cudoviste","text":"Solution in Python Python <pre><code>r, c = [int(d) for d in input().split()]\nparking = []\nfor _ in range(r):\nparking.append(input())\ndef count_spaces(parking, squash):\ntotal = 0\nfor i in range(r - 1):\nfor j in range(c - 1):\nspaces = [\nparking[i][j],\nparking[i + 1][j],\nparking[i][j + 1],\nparking[i + 1][j + 1],\n]\nif (\nall(s in \".X\" for s in spaces)\nand sum([s == \"X\" for s in spaces]) == squash\n):\ntotal += 1\nreturn total\nfor num in range(0, 5):\nprint(count_spaces(parking, num))\n</code></pre>"},{"location":"easy/#stacking-cups","title":"Stacking Cups","text":"Solution in Python Python <pre><code>size = {}\nfor _ in range(int(input())):\nparts = input().split()\nif parts[0].isdigit():\nsize[parts[1]] = int(parts[0]) / 2\nelse:\nsize[parts[0]] = int(parts[1])\nfor color in sorted(size, key=lambda x: size[x]):\nprint(color)\n</code></pre>"},{"location":"easy/#cut-in-line","title":"Cut in Line","text":"Solution in Python Python <pre><code>n = int(input())\nqueue = []\nfor _ in range(n):\nqueue.append(input())\nc = int(input())\nfor _ in range(c):\nevent = input().split()\nif event[0] == \"leave\":\nqueue.remove(event[1])\nelif event[0] == \"cut\":\nqueue.insert(queue.index(event[2]), event[1])\nfor name in queue:\nprint(name)\n</code></pre>"},{"location":"easy/#cut-the-negativity","title":"Cut the Negativity","text":"Solution in Python Python <pre><code>n = int(input())\npositives = []\nfor i in range(n):\nnumbers = [int(d) for d in input().split()]\nfor j in range(n):\nif numbers[j] &gt; 0:\npositives.append((str(i + 1), str(j + 1), str(numbers[j])))\nprint(len(positives))\nfor p in positives:\nprint(\" \".join(p))\n</code></pre>"},{"location":"easy/#cyanide-rivers","title":"Cyanide Rivers","text":"Solution in Python Python <pre><code>import math\ns = input()\nt = s.split(\"1\")\nprint(max([math.ceil(len(z) / 2) for z in t]))\n</code></pre>"},{"location":"easy/#damaged-equation","title":"Damaged Equation","text":"Solution in Python Python <pre><code>from itertools import product\na, b, c, d = [int(d) for d in input().split()]\nops = [\"*\", \"+\", \"-\", \"//\"]\nvalid = False\nfor op1, op2 in product(ops, ops):\ne = f\"{a} {op1} {b} == {c} {op2} {d}\"\ntry:\nif eval(e):\nprint(e.replace(\"==\", \"=\").replace(\"//\", \"/\"))\nvalid = True\nexcept:\npass\nif not valid:\nprint(\"problems ahead\")\n</code></pre>"},{"location":"easy/#datum","title":"Datum","text":"Solution in Python Python <pre><code>from datetime import datetime\nd, m = [int(d) for d in input().split()]\nprint(datetime(year=2009, month=m, day=d).strftime(\"%A\"))\n</code></pre>"},{"location":"easy/#death-knight-hero","title":"Death Knight Hero","text":"Solution in Python Python <pre><code>total = 0\nfor _ in range(int(input())):\nif \"CD\" not in input():\ntotal += 1\nprint(total)\n</code></pre>"},{"location":"easy/#delimiter-soup","title":"Delimiter Soup","text":"Solution in Python Python <pre><code>n = int(input())\ns = input()\nstack = []\nvalid = True\nfor i in range(n):\nc = s[i]\nif c in [\"(\", \"[\", \"{\"]:\nstack.append(c)\nif c in [\")\", \"]\", \"}\"]:\nif len(stack) == 0:\nvalid = False\nbreak\nv = stack.pop()\nif c == \")\" and v != \"(\":\nvalid = False\nbreak\nelif c == \"]\" and v != \"[\":\nvalid = False\nbreak\nelif c == \"}\" and v != \"{\":\nvalid = False\nbreak\nif valid:\nprint(\"ok so far\")\nelse:\nprint(c, i)\n</code></pre>"},{"location":"easy/#detailed-differences","title":"Detailed Differences","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\ns1, s2 = input(), input()\nresult = [\".\" if c1 == c2 else \"*\" for c1, c2 in zip(s1, s2)]\nprint(s1)\nprint(s2)\nprint(\"\".join(result))\n</code></pre>"},{"location":"easy/#dice-cup","title":"Dice Cup","text":"Solution in Python Python <pre><code>d1, d2 = [int(d) for d in input().split()]\nsums = []\nfor i in range(1, d1 + 1):\nfor j in range(1, d2 + 1):\nsums.append(i + j)\nfrom collections import Counter\nc = Counter(sums)\nmost_likely = max(c.values())\nfor key in sorted(c.keys()):\nif c[key] == most_likely:\nprint(key)\n</code></pre>"},{"location":"easy/#dice-game","title":"Dice Game","text":"Solution in Python Python <pre><code>g = [int(d) for d in input().split()]\ne = [int(d) for d in input().split()]\ndef ev(d):\ntotal, count = 0, 0\nfor i in range(d[0], d[1] + 1):\nfor j in range(d[2], d[3] + 1):\ntotal += i + j\ncount += 1\nreturn total / count\nratio = ev(g) / ev(e)\nif ratio &gt; 1:\nprint(\"Gunnar\")\nelif ratio &lt; 1:\nprint(\"Emma\")\nelse:\nprint(\"Tie\")\n</code></pre>"},{"location":"easy/#different-distances","title":"Different Distances","text":"Solution in Python Python <pre><code>while True:\nline = input()\nif line == \"0\":\nbreak\nx1, y1, x2, y2, p = [float(d) for d in line.split()]\nprint((abs(x1 - x2) ** p + abs(y1 - y2) ** p) ** (1 / p))\n</code></pre>"},{"location":"easy/#digit-swap","title":"Digit Swap","text":"Solutions in 3 languages GoJavaPython <pre><code>package main\nimport (\n\"fmt\"\n)\nfunc reverse(str string) (ans string) {\nfor _, v := range str {\nans = string(v) + ans\n}\nreturn\n}\nfunc main() {\nvar str string\nfmt.Scan(&amp;str)\nfmt.Println(reverse(str))\n}\n</code></pre> <pre><code>import java.util.*;\nclass DigitSwap {\npublic static void main(String[] argv){\nScanner s = new Scanner(System.in);\nStringBuilder ans = new StringBuilder();\nans.append(s.nextLine());\nans.reverse();\nSystem.out.println(ans);\n}\n}\n</code></pre> <pre><code>print(input()[::-1])\n</code></pre>"},{"location":"easy/#disc-district","title":"Disc District","text":"Solution in Python Python <pre><code>print(1, input())\n</code></pre>"},{"location":"easy/#divvying-up","title":"Divvying Up","text":"Solution in Python Python <pre><code>_ = input()\np = [int(d) for d in input().split()]\nif sum(p) % 3:\nprint(\"no\")\nelse:\nprint(\"yes\")\n</code></pre>"},{"location":"easy/#double-password","title":"Double Password","text":"Solutions in 2 languages JavaPython <pre><code>import java.util.Scanner;\nclass DoublePassword {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nString a = s.nextLine();\nString b = s.nextLine();\nint number = 1;\nfor (int i = 0; i &lt; a.length(); i++) {\nif (a.charAt(i) == b.charAt(i)) {\nnumber *= 1;\n} else {\nnumber *= 2;\n}\n}\nSystem.out.println(number);\n}\n}\n</code></pre> <pre><code>a, b = input(), input()\nnumber = 1\nfor c1, c2 in zip(a, b):\nif c1 == c2:\nnumber *= 1\nelse:\nnumber *= 2\nprint(number)\n</code></pre>"},{"location":"easy/#drinking-song","title":"Drinking Song","text":"Solution in Python Python <pre><code>n = int(input())\nw = input()\nfor i in range(n):\na = f\"{n-i} bottle{'s' if n-i &gt;1 else ''}\"\nb = f\"{'no more' if n-i-1==0 else n-i-1 } bottle{'' if n-i-1==1 else 's'}\"\nc = f\"{'one' if n-i&gt;1 else 'it' }\"\nd = f\"{' on the wall' if n-i-1 else ''}\"\nprint(f\"{a} of {w} on the wall, {a} of {w}.\")\nprint(f\"Take {c} down, pass it around, {b} of {w}{d}.\")\nif n - i - 1:\nprint()\n</code></pre>"},{"location":"easy/#drivers-dilemma","title":"Driver's Dilemma","text":"Solution in Python Python <pre><code>c, x, m = [float(d) for d in input().split()]\ntop = 0\nfor _ in range(6):\nmph, mpg = [float(d) for d in input().split()]\nif m / mph * x + m / mpg &lt;= c / 2:\ntop = mph\nif top:\nprint(f\"YES {top:.0f}\")\nelse:\nprint(\"NO\")\n</code></pre>"},{"location":"easy/#drm-messages","title":"DRM Messages","text":"Solution in Python Python <pre><code>l = ord(\"A\")\nr = ord(\"Z\")\ndef divide(message):\nhalf = len(message) // 2\nreturn message[:half], message[half:]\ndef to_ord(c, rotation):\nnew_chr = ord(c) + rotation\nreturn new_chr if new_chr &lt;= r else l + (new_chr - r - 1)\ndef rotate(half):\nrotation = sum([ord(c) - l for c in half])\nrotation %= 26\nresult = [to_ord(c, rotation) for c in half]\nreturn \"\".join([chr(c) for c in result])\ndef merge(first, second):\nrotations = [ord(c) - l for c in second]\nresult = [to_ord(c, rotation) for c, rotation in zip(first, rotations)]\nreturn \"\".join([chr(c) for c in result])\nmessage = input()\nfirst, second = divide(message)\nprint(merge(rotate(first), rotate(second)))\n</code></pre>"},{"location":"easy/#drunk-vigenere","title":"Drunk Vigen\u00e8re","text":"Solution in Python Python <pre><code>import string\nuppers = string.ascii_uppercase\ndef unshift(c, k, f):\nindex = uppers.index(k)\nif f:\nnew_index = uppers.index(c) + index\nelse:\nnew_index = uppers.index(c) - index\nreturn uppers[new_index % 26]\nmessage, key = input(), input()\nprint(\"\".join([unshift(c, k, i % 2) for i, (c, k) in enumerate(zip(message, key))]))\n</code></pre>"},{"location":"easy/#early-winter","title":"Early Winter","text":"Solution in Python Python <pre><code>n, m = [int(_) for _ in input().split()]\nd = [int(_) for _ in input().split()]\nd = [v &gt; m for v in d]\nfor k in range(n):\nif not d[k]:\nbreak\nif all(d):\nprint(\"It had never snowed this early!\")\nelse:\nprint(f\"It hadn't snowed this early in {k} years!\")\n</code></pre>"},{"location":"easy/#the-easiest-problem-is-this-one","title":"The Easiest Problem Is This One","text":"Solution in Python Python <pre><code>while True:\nn = input()\nif n == \"0\":\nbreak\ns1 = sum([int(d) for d in n])\nn = int(n)\np = 11\nwhile True:\ns2 = sum([int(d) for d in str(n * p)])\nif s2 == s1:\nbreak\np += 1\nprint(p)\n</code></pre>"},{"location":"easy/#echo-echo-echo","title":"Echo Echo Echo","text":"Solution in Python Python <pre><code>word = input().strip()\nprint(\" \".join([word] * 3))\n</code></pre>"},{"location":"easy/#egypt","title":"Egypt","text":"Solution in Python Python <pre><code>while True:\nsides = sorted([int(d) for d in input().split()])\nif not all(sides):\nbreak\nif sides[0] ** 2 + sides[1] ** 2 == sides[2] ** 2:\nprint(\"right\")\nelse:\nprint(\"wrong\")\n</code></pre>"},{"location":"easy/#election-paradox","title":"Election Paradox","text":"Solution in Python Python <pre><code>n = int(input())\np = [int(d) for d in input().split()]\np = sorted(p)\nt = 0\nfor i in range(0, n // 2 + 1):\nt += p[i] // 2\nfor i in range(n // 2 + 1, n):\nt += p[i]\nprint(t)\n</code></pre>"},{"location":"easy/#electrical-outlets","title":"Electrical Outlets","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nprint(sum([int(d) - 1 for d in input().split()[1:]]) + 1)\n</code></pre>"},{"location":"easy/#eligibility","title":"Eligibility","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nname, pss, dob, courses = input().split()\ncourses = int(courses)\npss = [int(d) for d in pss.split(\"/\")]\ndob = [int(d) for d in dob.split(\"/\")]\nif pss[0] &gt;= 2010 or dob[0] &gt;= 1991:\nprint(name, \"eligible\")\nelif courses &gt; 40:\nprint(name, \"ineligible\")\nelse:\nprint(name, \"coach petitions\")\n</code></pre>"},{"location":"easy/#encoded-message","title":"Encoded Message","text":"Solution in Python Python <pre><code>import math\nfor _ in range(int(input())):\nmessage = input()\nsize = int(math.sqrt(len(message)))\nm = []\nfor i in range(size):\nm.append(message[i * size : (i + 1) * size])\nans = []\nfor i in range(size - 1, -1, -1):\nfor j in range(size):\nans.append(m[j][i])\nprint(\"\".join(ans))\n</code></pre>"},{"location":"easy/#engineering-english","title":"Engineering English","text":"Solution in Python Python <pre><code>seen = set()\nwhile True:\ntry:\ns = input().split()\nexcept:\nbreak\nd = []\nfor t in s:\nif t.lower() not in seen:\nseen.add(t.lower())\nelse:\nt = \".\"\nd.append(t)\nprint(\" \".join(d))\n</code></pre>"},{"location":"easy/#erase-securely","title":"Erase Securely","text":"Solution in Python Python <pre><code>n = int(input())\na, b = input(), input()\nif n % 2:\nprint(\n\"Deletion\", \"failed\" if not all([i != j for i, j in zip(a, b)]) else \"succeeded\"\n)\nelse:\nprint(\n\"Deletion\", \"failed\" if not all([i == j for i, j in zip(a, b)]) else \"succeeded\"\n)\n</code></pre>"},{"location":"easy/#espresso","title":"Espresso!","text":"Solution in Python Python <pre><code>n, s = [int(d) for d in input().split()]\nrefill = 0\ntank = s\nfor _ in range(n):\no = input()\nif \"L\" in o:\nw = int(o[:-1]) + 1\nelse:\nw = int(o)\nif tank - w &lt; 0:\nrefill += 1\ntank = s\ntank -= w\nprint(refill)\n</code></pre>"},{"location":"easy/#estimating-the-area-of-a-circle","title":"Estimating the Area of a Circle","text":"Solution in Python Python <pre><code>import math\nwhile True:\nr, m, c = input().split()\nif r == \"0\" and m == \"0\" and c == \"0\":\nbreak\nr = float(r)\nm, c = int(m), int(c)\nprint(math.pi * r * r, 4 * r * r * c / m)\n</code></pre>"},{"location":"easy/#event-planning","title":"Event Planning","text":"Solution in Python Python <pre><code>n, b, h, w = [int(d) for d in input().split()]\ncosts = []\nfor _ in range(h):\np = int(input())\na = [int(d) for d in input().split()]\nif not any([_a &gt;= n for _a in a]):\ncosts.append(None)\ncontinue\nc = p * n\nif c &gt; b:\nc = None\ncosts.append(c)\ncosts = [c for c in costs if c]\nif not costs:\nprint(\"stay home\")\nelse:\nprint(min(costs))\n</code></pre>"},{"location":"easy/#ive-been-everywhere-man","title":"I've Been Everywhere, Man","text":"Solution in Python Python <pre><code>cities = {}\nfor i in range(int(input())):\ncities[i] = set()\nfor _ in range(int(input())):\ncities[i].add(input())\nprint(\"\\n\".join([str(len(s)) for s in cities.values()]))\n</code></pre>"},{"location":"easy/#exactly-electrical","title":"Exactly Electrical","text":"Solution in Python Python <pre><code>a, b = [int(d) for d in input().split()]\nc, d = [int(d) for d in input().split()]\nt = int(input())\nm = abs(a - c) + abs(b - d)\nprint(\"Y\" if m &lt;= t and (m - t) % 2 == 0 else \"N\")\n</code></pre>"},{"location":"easy/#exam","title":"Exam","text":"Solution in Python Python <pre><code>k = int(input())\ny = input()\nf = input()\nsame, different = 0, 0\nfor a, b in zip(y, f):\nif a == b:\nsame += 1\nelse:\ndifferent += 1\nprint(min(same, k) + min(different, (len(y) - k)))\n</code></pre>"},{"location":"easy/#expected-earnings","title":"Expected Earnings","text":"Solution in Python Python <pre><code>n, k, p = input().split()\nn = int(n)\nk = int(k)\np = float(p)\nev = n * p - k\nif ev &lt; 0:\nprint(\"spela\")\nelse:\nprint(\"spela inte!\")\n</code></pre>"},{"location":"easy/#eye-of-sauron","title":"Eye of Sauron","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n\"strings\"\n)\nfunc main() {\nvar drawing string\nfmt.Scan(&amp;drawing)\nparts := strings.Split(drawing, \"()\")\nleft, right := parts[0], parts[1]\nif left == right {\nfmt.Println(\"correct\")\n} else {\nfmt.Println(\"fix\")\n}\n}\n</code></pre> <pre><code>drawing = input()\nleft, right = drawing.split(\"()\")\nif left == right:\nprint(\"correct\")\nelse:\nprint(\"fix\")\n</code></pre>"},{"location":"easy/#fading-wind","title":"Fading Wind","text":"Solution in Python Python <pre><code>h, k, v, s = [int(d) for d in input().split()]\nt = 0\nwhile h &gt; 0:\nv += s\nv -= max(1, v // 10)\nif v &gt;= k:\nh += 1\nelif v &gt; 0:\nh -= 1\nif not h:\nv = 0\nelse:\nh = 0\nv = 0\nt += v\nif s &gt; 0:\ns -= 1\nprint(t)\n</code></pre>"},{"location":"easy/#faktor","title":"Faktor","text":"Solution in Python Python <pre><code>a, i = [int(d) for d in input().split()]\nprint(a * (i - 1) + 1)\n</code></pre>"},{"location":"easy/#falling-apart","title":"Falling Apart","text":"Solution in Python Python <pre><code>n = int(input())\na = sorted([int(d) for d in input().split()], reverse=True)\nprint(\nsum([a[i] for i in range(0, n, 2)]),\nsum([a[i] for i in range(1, n, 2)]),\n)\n</code></pre>"},{"location":"easy/#false-sense-of-security","title":"False Sense of Security","text":"Solution in Python Python <pre><code>encoding = {\n\"A\": \".-\",\n\"B\": \"-...\",\n\"C\": \"-.-.\",\n\"D\": \"-..\",\n\"E\": \".\",\n\"F\": \"..-.\",\n\"G\": \"--.\",\n\"H\": \"....\",\n\"I\": \"..\",\n\"J\": \".---\",\n\"K\": \"-.-\",\n\"L\": \".-..\",\n\"M\": \"--\",\n\"N\": \"-.\",\n\"O\": \"---\",\n\"P\": \".--.\",\n\"Q\": \"--.-\",\n\"R\": \".-.\",\n\"S\": \"...\",\n\"T\": \"-\",\n\"U\": \"..-\",\n\"V\": \"...-\",\n\"W\": \".--\",\n\"X\": \"-..-\",\n\"Y\": \"-.--\",\n\"Z\": \"--..\",\n\"_\": \"..--\",\n\",\": \".-.-\",\n\".\": \"---.\",\n\"?\": \"----\",\n}\ndecoding = dict([(v, k) for k, v in encoding.items()])\nwhile True:\ntry:\nencoded = input()\nexcept:\nbreak\nlength = [len(encoding[c]) for c in encoded]\nmorse = \"\".join([encoding[c] for c in encoded])\nans, s = \"\", 0\nfor i in reversed(length):\nans += decoding[morse[s : s + i]]\ns += i\nprint(ans)\n</code></pre>"},{"location":"easy/#fast-food-prizes","title":"Fast Food Prizes","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nn, m = [int(d) for d in input().split()]\nr = []\nfor _ in range(n):\ns = input().split()\np = int(s[-1])\nk = [int(d) for d in s[1:-1]]\nr.append((k, p))\ns = [int(d) for d in input().split()]\nans = 0\nfor t, p in r:\nc = min([s[d - 1] for d in t])\nans += p * c\nprint(ans)\n</code></pre>"},{"location":"easy/#fbi-universal-control-numbers","title":"FBI Universal Control Numbers","text":"Solution in Python Python <pre><code>m = {\n\"0\": 0,\n\"1\": 1,\n\"2\": 2,\n\"3\": 3,\n\"4\": 4,\n\"5\": 5,\n\"6\": 6,\n\"7\": 7,\n\"8\": 8,\n\"9\": 9,\n\"A\": 10,\n\"B\": 8,\n\"C\": 11,\n\"D\": 12,\n\"E\": 13,\n\"F\": 14,\n\"G\": 11,\n\"H\": 15,\n\"I\": 1,\n\"J\": 16,\n\"K\": 17,\n\"L\": 18,\n\"M\": 19,\n\"N\": 20,\n\"O\": 0,\n\"P\": 21,\n\"Q\": 0,\n\"R\": 22,\n\"S\": 5,\n\"T\": 23,\n\"U\": 24,\n\"V\": 24,\n\"W\": 25,\n\"X\": 26,\n\"Y\": 24,\n\"Z\": 2,\n}\nw = [2, 4, 5, 7, 8, 10, 11, 13]\nfor _ in range(int(input())):\ni, d = input().split()\nt = sum([m[b] * a for a, b in zip(w, d)])\nif t % 27 == m[d[-1]]:\ns = sum([m[b] * 27**a for a, b in zip(range(8), d[:8][::-1])])\nprint(f\"{i} {s}\")\nelse:\nprint(f\"{i} Invalid\")\n</code></pre>"},{"location":"easy/#fifty-shades-of-pink","title":"Fifty Shades of Pink","text":"Solution in Python Python <pre><code>total = 0\nfor _ in range(int(input())):\nbutton = input().lower()\nif \"pink\" in button or \"rose\" in button:\ntotal += 1\nif not total:\nprint(\"I must watch Star Wars with my daughter\")\nelse:\nprint(total)\n</code></pre>"},{"location":"easy/#filip","title":"Filip","text":"Solution in Python Python <pre><code>a, b = input().split()\na, b = a[::-1], b[::-1]\nif a &gt; b:\nprint(a)\nelse:\nprint(b)\n</code></pre>"},{"location":"easy/#final-exam","title":"Final Exam","text":"Solution in Python Python <pre><code>n = int(input())\nans, score = [], 0\nfor i in range(n):\nans.append(input())\nif i == 0:\ncontinue\nif ans[i] == ans[i - 1]:\nscore += 1\nprint(score)\n</code></pre>"},{"location":"easy/#finding-an-a","title":"Finding An A","text":"Solutions in 3 languages C++GoPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nstring a;\ncin &gt;&gt; a;\nint found = a.find_first_of(\"a\");\ncout &lt;&lt; a.substr(found);\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport (\n\"fmt\"\n\"strings\"\n)\nfunc main() {\nvar s string\nfmt.Scan(&amp;s)\nindex := strings.Index(s, \"a\")\nfmt.Println(s[index:])\n}\n</code></pre> <pre><code>word = input()\nprint(word[word.find(\"a\") :])\n</code></pre>"},{"location":"easy/#fizzbuzz","title":"FizzBuzz","text":"Solution in Python Python <pre><code>x, y, n = [int(d) for d in input().split()]\nfor i in range(1, n + 1):\nans = \"\"\nif not i % x:\nans += \"Fizz\"\nif not i % y:\nans += \"Buzz\"\nif not ans:\nans = i\nprint(ans)\n</code></pre>"},{"location":"easy/#flexible-spaces","title":"Flexible Spaces","text":"Solution in Python Python <pre><code>w, p = [int(d) for d in input().split()]\nl = [int(d) for d in input().split()]\nl = [0] + l + [w]\nc = set()\nfor i in range(p + 1):\nfor j in range(i + 1, p + 2):\nc.add(l[j] - l[i])\nprint(\" \".join([str(d) for d in sorted(c)]))\n</code></pre>"},{"location":"easy/#birthday-memorization","title":"Birthday Memorization","text":"Solution in Python Python <pre><code>n = int(input())\nrecords = {}\nfor _ in range(n):\ns, c, date = input().split()\nc = int(c)\ndate = \"\".join(date.split(\"/\")[::-1])\nif date not in records:\nrecords[date] = (s, c)\nelse:\n_, _c = records[date]\nif c &gt; _c:\nrecords[date] = (s, c)\nprint(len(records.keys()))\nordered_keys = sorted(records, key=lambda k: records[k][0])\nfor key in ordered_keys:\nprint(records[key][0])\n</code></pre>"},{"location":"easy/#forced-choice","title":"Forced Choice","text":"Solution in Python Python <pre><code>_, p, s = input().split()\nfor _ in range(int(s)):\nif p in input().split()[1:]:\nprint(\"KEEP\")\nelse:\nprint(\"REMOVE\")\n</code></pre>"},{"location":"easy/#free-food","title":"Free Food","text":"Solution in Python Python <pre><code>n = int(input())\ndays = set()\nfor _ in range(n):\nstart, end = [int(d) for d in input().split()]\ndays.update(range(start, end + 1))\nprint(len(days))\n</code></pre>"},{"location":"easy/#from-a-to-b","title":"From A to B","text":"Solution in Python Python <pre><code>a, b = [int(d) for d in input().split()]\nif a &lt;= b:\nprint(b - a)\nelse:\ntotal = 0\nwhile a &gt; b:\nif a % 2:\na += 1\ntotal += 1\na /= 2\ntotal += 1\ntotal += b - a\nprint(int(total))\n</code></pre>"},{"location":"easy/#fyi","title":"FYI","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n\"strings\"\n)\nfunc main() {\nvar s string\nfmt.Scan(&amp;s)\nif strings.HasPrefix(s, \"555\") {\nfmt.Println(1)\n} else {\nfmt.Println(0)\n}\n}\n</code></pre> <pre><code>if input().startswith(\"555\"):\nprint(1)\nelse:\nprint(0)\n</code></pre>"},{"location":"easy/#gandalfs-spell","title":"Gandalf's Spell","text":"Solution in Python Python <pre><code>c = list(input())\ns = input().split()\nif len(c) != len(s):\nprint(\"False\")\nelse:\nd, valid = {}, True\nfor a, b in zip(c, s):\nif a not in d:\nd[a] = b\nelse:\nif d[a] != b:\nprint(\"False\")\nvalid = False\nbreak\nif valid:\nif len(set(d.keys())) == len(set(d.values())):\nprint(\"True\")\nelse:\nprint(\"False\")\n</code></pre>"},{"location":"easy/#gcd","title":"GCD","text":"Solution in Python Python <pre><code>import math\na, b = [int(d) for d in input().split()]\nprint(math.gcd(a, b))\n</code></pre>"},{"location":"easy/#gcvwr","title":"GCVWR","text":"Solution in Python Python <pre><code>g, t, n = [int(d) for d in input().split()]\ncapacity = (g - t) * 0.9\nitems = sum([int(d) for d in input().split()])\nprint(int(capacity - items))\n</code></pre>"},{"location":"easy/#gene-block","title":"Gene Block","text":"Solution in Python Python <pre><code>mapping = {\n1: 3,\n2: 6,\n3: 9,\n4: 2,\n5: 5,\n6: 8,\n7: 1,\n8: 4,\n9: 7,\n0: 10,\n}\nfor _ in range(int(input())):\nn = int(input())\nd = n % 10\nif n &gt;= 7 * mapping[d]:\nprint(mapping[d])\nelse:\nprint(-1)\n</code></pre>"},{"location":"easy/#gerrymandering","title":"Gerrymandering","text":"Solution in Python Python <pre><code>p, _ = [int(d) for d in input().split()]\nvotes = {}\nfor _ in range(p):\nd, a, b = [int(d) for d in input().split()]\nif d not in votes:\nvotes[d] = {\"A\": a, \"B\": b}\nelse:\nvotes[d][\"A\"] += a\nvotes[d][\"B\"] += b\ntotal_wa, total_wb = 0, 0\nfor d in sorted(votes):\ntotal = votes[d][\"A\"] + votes[d][\"B\"]\nt = total // 2 + 1\nwinner = \"A\" if votes[d][\"A\"] &gt; votes[d][\"B\"] else \"B\"\nwa = votes[d][\"A\"] - t if votes[d][\"A\"] &gt; votes[d][\"B\"] else votes[d][\"A\"]\nwb = votes[d][\"B\"] - t if votes[d][\"B\"] &gt; votes[d][\"A\"] else votes[d][\"B\"]\nprint(winner, wa, wb)\ntotal_wa += wa\ntotal_wb += wb\nv = sum([sum(ab.values()) for ab in votes.values()])\nprint(abs(total_wa - total_wb) / v)\n</code></pre>"},{"location":"easy/#glasses-foggy-moms-spaghetti","title":"Glasses Foggy, Mom's Spaghetti","text":"Solution in Python Python <pre><code>import math\nd, x, y, h = input().split()\nd = int(d)\nx = int(x)\ny = int(y)\nh = int(h)\nangle1 = (math.atan(y / x)) - (math.atan((y - h / 2) / x))\nangle2 = (math.atan((y + h / 2) / x)) - (math.atan(y / x))\nd1 = math.tan(angle1) * d\nd2 = math.tan(angle2) * d\nprint(d1 + d2)\n</code></pre>"},{"location":"easy/#goat-rope","title":"Goat Rope","text":"Solution in Python Python <pre><code>x, y, x1, y1, x2, y2 = [int(d) for d in input().split()]\nif x &gt;= x1 and x &lt;= x2:\nprint(min(abs(y - y1), abs(y - y2)))\nelif y &gt;= y1 and y &lt;= y2:\nprint(min(abs(x - x1), abs(x - x2)))\nelse:\nx3, y3 = x1, y2\nx4, y4 = x2, y1\nl = [\n((x - a) ** 2 + (y - b) ** 2) ** 0.5\nfor a, b in [(x1, y1), (x2, y2), (x1, y2), (x2, y1)]\n]\nprint(min(l))\n</code></pre>"},{"location":"easy/#grading","title":"Grading","text":"Solution in Python Python <pre><code>line = input()\nscore = int(input())\na, b, c, d, e = [int(d) for d in line.split()]\nif score &gt;= a:\nprint(\"A\")\nelif score &gt;= b:\nprint(\"B\")\nelif score &gt;= c:\nprint(\"C\")\nelif score &gt;= d:\nprint(\"D\")\nelif score &gt;= e:\nprint(\"E\")\nelse:\nprint(\"F\")\n</code></pre>"},{"location":"easy/#grass-seed-inc","title":"Grass Seed Inc.","text":"Solution in Python Python <pre><code>c = float(input())\ntotal = 0\nfor _ in range(int(input())):\nw, l = [float(d) for d in input().split()]\ntotal += c * w * l\nprint(f\"{total:.7f}\")\n</code></pre>"},{"location":"easy/#greedily-increasing-subsequence","title":"Greedily Increasing Subsequence","text":"Solution in Python Python <pre><code>n = int(input())\na = [int(d) for d in input().split()]\ng = [a[0]]\nfor i in range(1, n):\nv = a[i]\nif v &gt; g[-1]:\ng.append(v)\nprint(len(g))\nprint(\" \".join([str(d) for d in g]))\n</code></pre>"},{"location":"easy/#greedy-polygons","title":"Greedy Polygons","text":"Solution in Python Python <pre><code>import math\nfor _ in range(int(input())):\nn, l, d, g = [int(d) for d in input().split()]\na = n * l * l / (4 * math.tan(math.pi / n))\na += n * l * d * g\na += math.pi * ((d * g) ** 2)\nprint(a)\n</code></pre>"},{"location":"easy/#greetings","title":"Greetings!","text":"Solution in Python Python <pre><code>print(input().replace(\"e\", \"ee\"))\n</code></pre>"},{"location":"easy/#watch-out-for-those-hailstones","title":"Watch Out For Those Hailstones!","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n)\nfunc h(n int) int {\nif n == 1 {\nreturn 1\n} else if n%2 == 0 {\nreturn n + h(n/2)\n} else {\nreturn n + h(3*n+1)\n}\n}\nfunc main() {\nvar n int\nfmt.Scan(&amp;n)\nfmt.Println(h(n))\n}\n</code></pre> <pre><code>def h(n):\nif n == 1:\nreturn 1\nelse:\nreturn n + (h(n // 2) if n % 2 == 0 else h(3 * n + 1))\nn = int(input())\nprint(h(n))\n</code></pre>"},{"location":"easy/#hailstone-sequences","title":"Hailstone Sequences","text":"Solution in Python Python <pre><code>n = int(input())\ns = [n]\nwhile True:\nv = s[-1]\nif v == 1:\nbreak\nelif v % 2 == 0:\ns.append(v // 2)\nelse:\ns.append(3 * v + 1)\nprint(len(s))\n</code></pre>"},{"location":"easy/#hangman","title":"Hangman","text":"Solution in Python Python <pre><code>word = set(list(input()))\nguess = input()\ntries = 0\ncorrect = 0\nfor c in guess:\nif c in word:\ncorrect += 1\nelse:\ntries += 1\nif correct == len(word):\nbreak\nif tries &gt;= 10:\nprint(\"LOSE\")\nelse:\nprint(\"WIN\")\n</code></pre>"},{"location":"easy/#harshad-numbers","title":"Harshad Numbers","text":"Solution in Python Python <pre><code>n = int(input())\nwhile True:\nsd = sum([int(d) for d in str(n)])\nif not n % sd:\nbreak\nn += 1\nprint(n)\n</code></pre>"},{"location":"easy/#haughty-cuisine","title":"Haughty Cuisine","text":"Solution in Python Python <pre><code>from random import randint\nn = int(input())\nmenu = []\nfor _ in range(n):\nmenu.append(input().split())\nprint(\"\\n\".join(menu[randint(0, n - 1)]))\n</code></pre>"},{"location":"easy/#head-guard","title":"Head Guard","text":"Solution in Python Python <pre><code>while True:\ntry:\ns = input()\nexcept:\nbreak\nparts = []\nprev, t = s[0], 1\nfor c in s[1:]:\nif c != prev:\nparts.append((prev, t))\nt = 1\nprev = c\nelse:\nt += 1\nparts.append((prev, t))\nprint(\"\".join([f\"{v}{k}\" for k, v in parts]))\n</code></pre>"},{"location":"easy/#heart-rate","title":"Heart Rate","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nb, p = [float(d) for d in input().split()]\nmin_abpm = 60 / p * (b - 1)\nbpm = 60 * b / p\nmax_abpm = 60 / p * (b + 1)\nprint(f\"{min_abpm:.4f} {bpm:.4f} {max_abpm:.4f}\")\n</code></pre>"},{"location":"easy/#homework","title":"Homework","text":"Solution in Python Python <pre><code>total = 0\nparts = input().split(\";\")\nfor part in parts:\nranges = part.split(\"-\")\nif len(ranges) == 1:\ntotal += 1\nelse:\ntotal += len(range(int(ranges[0]), int(ranges[1]))) + 1\nprint(total)\n</code></pre>"},{"location":"easy/#heirs-dilemma","title":"Heir's Dilemma","text":"Solution in Python Python <pre><code>l, h = [int(d) for d in input().split()]\ntotal = 0\nfor i in range(l, h + 1):\ndigits = set(str(i))\nif len(digits) != 6 or \"0\" in digits:\ncontinue\nif not all([i % int(d) == 0 for d in digits]):\ncontinue\ntotal += 1\nprint(total)\n</code></pre>"},{"location":"easy/#heliocentric","title":"Heliocentric","text":"Solution in Python Python <pre><code>def offset(d, b):\nreturn (b - d % b) % b\ncc = 1\nwhile True:\ntry:\na, b = [int(d) for d in input().split()]\nexcept:\nbreak\noffset_a, offset_b = offset(a, 365), offset(b, 687)\nif offset_a == offset_b:\nprint(f\"Case {cc}:\", offset_a)\nelse:\nt = offset_a\nwhile True:\nt += 365\nif (offset(t, 687) + offset_b) % 687 == 0:\nbreak\nprint(f\"Case {cc}:\", t)\ncc += 1\n</code></pre>"},{"location":"easy/#hello-world","title":"Hello World!","text":"Solutions in 8 languages C++GoHaskellJavaJavaScriptKotlinPythonRust <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\ncout &lt;&lt; \"Hello World!\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nfmt.Println(\"Hello World!\")\n}\n</code></pre> <pre><code>main = putStrLn \"Hello World!\"\n</code></pre> <pre><code>class HelloWorld {\npublic static void main(String[] args) {\nSystem.out.println(\"Hello World!\");\n}\n}\n</code></pre> <pre><code>console.log(\"Hello World!\");\n</code></pre> <pre><code>fun main() {\n    println(\"Hello World!\")\n}\n</code></pre> <pre><code>print(\"Hello World!\")\n</code></pre> <pre><code>fn main() {\nprintln!(\"Hello World!\");\n}\n</code></pre>"},{"location":"easy/#help-a-phd-candidate-out","title":"Help a PhD candidate out!","text":"Solution in Python Python <pre><code>n = int(input())\nfor _ in range(n):\nline = input()\nparts = line.split(\"+\")\nif len(parts) == 1:\nprint(\"skipped\")\nelse:\nprint(int(parts[0]) + int(parts[1]))\n</code></pre>"},{"location":"easy/#herman","title":"Herman","text":"Solution in Python Python <pre><code>import math\nr = int(input())\nprint(f\"{math.pi*r*r:.6f}\")\nprint(2 * r * r)\n</code></pre>"},{"location":"easy/#hissing-microphone","title":"Hissing Microphone","text":"Solutions in 3 languages C++JavaScriptPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nstring a;\ncin &gt;&gt; a;\nif (a.find(\"ss\") == -1)\n{\ncout &lt;&lt; \"no hiss\" &lt;&lt; endl;\n}\nelse\n{\ncout &lt;&lt; \"hiss\" &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (line) =&gt; {\nif (line.includes(\"ss\")) {\nconsole.log(\"hiss\");\n} else {\nconsole.log(\"no hiss\");\n}\n});\n</code></pre> <pre><code>a = input()\nif \"ss\" in a:\nprint(\"hiss\")\nelse:\nprint(\"no hiss\")\n</code></pre>"},{"location":"easy/#hitting-the-targets","title":"Hitting the Targets","text":"Solution in Python Python <pre><code>def in_rectangle(x1, y1, x2, y2, x, y):\nx1, x2 = min(x1, x2), max(x1, x2)\ny1, y2 = min(y1, y2), max(y1, y2)\nif x in range(x1, x2 + 1) and y in range(y1, y2 + 1):\nreturn True\nelse:\nreturn False\ndef in_circle(x0, y0, r, x, y):\nreturn (x0 - x) ** 2 + (y0 - y) ** 2 &lt;= r**2\nm = int(input())\nshapes = []\nfor _ in range(m):\nvalues = input().split()\nshapes.append((values[0], *[int(d) for d in values[1:]]))\nn = int(input())\nfor _ in range(n):\ntotal = 0\nx, y = [int(d) for d in input().split()]\nfor shape in shapes:\nif shape[0] == \"rectangle\":\ntotal += in_rectangle(*shape[1:], x, y)\nelif shape[0] == \"circle\":\ntotal += in_circle(*shape[1:], x, y)\nprint(total)\n</code></pre>"},{"location":"easy/#hot-hike","title":"Hot Hike","text":"Solution in Python Python <pre><code>n = int(input())\nt = [int(d) for d in input().split()]\norder = sorted(range(n - 2), key=lambda k: max(t[k], t[k + 2]))\nd = order[0]\nv = max(t[d], t[d + 2])\nprint(d + 1, v)\n</code></pre>"},{"location":"easy/#the-amazing-human-cannonball","title":"The Amazing Human Cannonball","text":"Solution in Python Python <pre><code>import math\nfor _ in range(int(input())):\nv0, a, x1, h1, h2 = [float(d) for d in input().split()]\na = math.radians(a)\nt = x1 / (v0 * math.cos(a))\ny = v0 * t * math.sin(a) - 0.5 * 9.81 * (t**2)\nif y &lt; h1 + 1 or y &gt; h2 - 1:\nprint(\"Not Safe\")\nelse:\nprint(\"Safe\")\n</code></pre>"},{"location":"easy/#icpc-awards","title":"ICPC Awards","text":"Solution in Python Python <pre><code>n = int(input())\nshown = {}\nfor _ in range(n):\nu, t = input().split()\nif u not in shown and len(shown.keys()) &lt; 12:\nprint(u, t)\nshown[u] = True\n</code></pre>"},{"location":"easy/#illuminati-spotti","title":"Illuminati Spotti","text":"Solution in Python Python <pre><code>n = int(input())\nm = []\nfor _ in range(n):\nm.append(input().split())\ntotal = 0\nfor i in range(1, n - 1):\nfor j in range(i):\nfor k in range(i + 1, n):\nif m[i][j] == m[k][j] == m[k][i] == \"1\":\ntotal += 1\nprint(total)\n</code></pre>"},{"location":"easy/#international-dates","title":"International Dates","text":"Solution in Python Python <pre><code>aa, bb, _ = [int(d) for d in input().split(\"/\")]\nif aa &gt; 12 and bb &lt;= 12:\nprint(\"EU\")\nelif aa &lt;= 12 and bb &gt; 12:\nprint(\"US\")\nelse:\nprint(\"either\")\n</code></pre>"},{"location":"easy/#isithalloweencom","title":"IsItHalloween.com","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar m, d string\nfmt.Scan(&amp;m)\nfmt.Scan(&amp;d)\nif (m == \"OCT\" &amp;&amp; d == \"31\") || (m == \"DEC\" &amp;&amp; d == \"25\") {\nfmt.Println(\"yup\")\n} else {\nfmt.Println(\"nope\")\n}\n}\n</code></pre> <pre><code>m, d = input().split()\nif (m == \"OCT\" and d == \"31\") or (m == \"DEC\" and d == \"25\"):\nprint(\"yup\")\nelse:\nprint(\"nope\")\n</code></pre>"},{"location":"easy/#jabuke","title":"Jabuke","text":"Solution in Python Python <pre><code>xa, ya = [int(d) for d in input().split()]\nxb, yb = [int(d) for d in input().split()]\nxc, yc = [int(d) for d in input().split()]\nn = int(input())\narea = abs(xa * (yb - yc) + xb * (yc - ya) + xc * (ya - yb)) / 2\nprint(f\"{area:.1f}\")\ndef sign(x1, y1, x2, y2, x3, y3):\nreturn (x1 - x3) * (y2 - y3) - (x2 - x3) * (y1 - y3)\ndef in_triangle(x, y, x1, y1, x2, y2, x3, y3):\nd1 = sign(x, y, x1, y1, x2, y2)\nd2 = sign(x, y, x2, y2, x3, y3)\nd3 = sign(x, y, x3, y3, x1, y1)\nhas_neg = d1 &lt; 0 or d2 &lt; 0 or d3 &lt; 0\nhas_pos = d1 &gt; 0 or d2 &gt; 0 or d3 &gt; 0\nreturn not (has_neg and has_pos)\ntotal = 0\nfor _ in range(n):\nx, y = [int(d) for d in input().split()]\nif in_triangle(x, y, xa, ya, xb, yb, xc, yc):\ntotal += 1\nprint(total)\n</code></pre>"},{"location":"easy/#jack-o-lantern-juxtaposition","title":"Jack-O'-Lantern Juxtaposition","text":"Solution in Python Python <pre><code>numbers = [int(n) for n in input().split()]\nresult = 1\nfor n in numbers:\nresult *= n\nprint(result)\n</code></pre>"},{"location":"easy/#janitor-troubles","title":"Janitor Troubles","text":"Solution in Python Python <pre><code>import math\na, b, c, d = [int(d) for d in input().split()]\ns = (a + b + c + d) / 2\nprint(math.sqrt((s - a) * (s - b) * (s - c) * (s - d)))\n</code></pre>"},{"location":"easy/#jewelry-box","title":"Jewelry Box","text":"Solution in Python Python <pre><code>def f(h):\na = x - 2 * h\nb = y - 2 * h\nreturn a * b * h\nfor _ in range(int(input())):\nx, y = [int(d) for d in input().split()]\nh = (x + y - ((x + y) ** 2 - 3 * x * y) ** 0.5) / 6\nprint(f\"{f(h):.11f}\")\n</code></pre>"},{"location":"easy/#job-expenses","title":"Job Expenses","text":"Solution in Python Python <pre><code>_ = input()\nprint(-sum([int(d) for d in input().split() if \"-\" in d]))\n</code></pre>"},{"location":"easy/#joint-jog-jam","title":"Joint Jog Jam","text":"Solution in Python Python <pre><code>import math\ndef dist(x1, y1, x2, y2):\nreturn math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\ncoords = [int(d) for d in input().split()]\nprint(max(dist(*coords[:4]), dist(*coords[4:])))\n</code></pre>"},{"location":"easy/#judging-moose","title":"Judging Moose","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar l, r int\nfmt.Scan(&amp;l)\nfmt.Scan(&amp;r)\nif l == 0 &amp;&amp; r == 0 {\nfmt.Println(\"Not a moose\")\n} else {\np := 2 * l\nif r &gt; l {\np = 2 * r\n}\nt := \"Odd\"\nif l == r {\nt = \"Even\"\n}\nfmt.Println(t, p)\n}\n}\n</code></pre> <pre><code>l, r = [int(d) for d in input().split()]\nif not l and not r:\nprint(\"Not a moose\")\nelse:\np = 2 * max(l, r)\nprint(\"Odd\" if l != r else \"Even\", p)\n</code></pre>"},{"location":"easy/#jumbo-javelin","title":"Jumbo Javelin","text":"Solution in Python Python <pre><code>n = int(input())\nlength = 0\nfor _ in range(n):\nlength += int(input())\nlength -= n - 1\nprint(length)\n</code></pre>"},{"location":"easy/#running-race","title":"Running Race","text":"Solution in Python Python <pre><code>l, k, _ = [int(d) for d in input().split()]\nrecord = {}\nfor _ in range(l):\ni, t = input().split()\nmm, ss = [int(d) for d in t.split(\".\")]\ns = mm * 60 + ss\nif i in record:\nrecord[i].append(s)\nelse:\nrecord[i] = [s]\ndelete = [i for i in record if len(record[i]) != k]\nfor i in delete:\nrecord.pop(i)\nsorted_i = sorted(record, key=lambda i: (sum(record[i]), int(i)))\nprint(\"\\n\".join(sorted_i))\n</code></pre>"},{"location":"easy/#karte","title":"Karte","text":"Solution in Python Python <pre><code>from collections import Counter\ns = input()\ncards = {\n\"P\": Counter(),\n\"K\": Counter(),\n\"H\": Counter(),\n\"T\": Counter(),\n}\nduplicated = False\nfor i in range(0, len(s), 3):\nsuit = s[i]\ncard = s[i + 1 : i + 3]\nif cards[suit][card]:\nduplicated = True\nbreak\ncards[suit][card] += 1\nif not duplicated:\nprint(\" \".join([str(13 - len(c)) for c in cards.values()]))\nelse:\nprint(\"GRESKA\")\n</code></pre>"},{"location":"easy/#kemija","title":"Kemija","text":"Solutions in 2 languages JavaScriptPython <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (line) =&gt; {\nfor (let c of \"aeiou\") {\nconst regex = new RegExp(`${c}p${c}`, \"g\");\nline = line.replace(regex, c);\n}\nconsole.log(line);\n});\n</code></pre> <pre><code>s = input()\nfor c in \"aeiou\":\ns = s.replace(f\"{c}p{c}\", c)\nprint(s)\n</code></pre>"},{"location":"easy/#the-key-to-cryptography","title":"The Key to Cryptography","text":"Solution in Python Python <pre><code>import string\nuppers = string.ascii_uppercase\ndef decrypt(c, k):\nindex = (uppers.index(c) - uppers.index(k)) % 26\nreturn uppers[index]\nm, w = input(), input()\nsize_w = len(w)\nsize_m = len(m)\no = []\nfor i in range(0, size_m, size_w):\nif i + size_w &lt; size_m:\nl = zip(m[i : i + size_w], w)\nelse:\nl = zip(m[i:], w)\nt = \"\".join([decrypt(c, k) for c, k in l])\no.append(t)\nw = t\nprint(\"\".join(o))\n</code></pre>"},{"location":"easy/#keywords","title":"Keywords","text":"Solution in Python Python <pre><code>keywords = set()\nfor _ in range(int(input())):\nkeywords.add(input().lower().replace(\"-\", \" \"))\nprint(len(keywords))\n</code></pre>"},{"location":"easy/#kitten-on-a-tree","title":"Kitten on a Tree","text":"Solution in Python Python <pre><code>k = input()\nb = []\nwhile True:\nline = input()\nif line == \"-1\":\nbreak\nb.append(line.split())\np = [k]\nt = k\nwhile True:\nfound = False\nfor row in b:\nif t in row[1:]:\np.append(row[0])\nfound = True\nt = row[0]\nbreak\nif not found:\nbreak\nprint(\" \".join(p))\n</code></pre>"},{"location":"easy/#kleptography","title":"Kleptography","text":"Solution in Python Python <pre><code>from string import ascii_lowercase as l\nn, m = [int(d) for d in input().split()]\np = input()\nc = input()\np = p[::-1]\nc = c[::-1]\nans = \"\"\nfor i in range(0, m, n):\nif i + n &lt; m:\npart = c[i : i + n]\nelse:\npart = c[i:]\nans += p\np = \"\".join([l[(l.index(a) - l.index(b)) % 26] for a, b in zip(part, p)])\nans += p\nprint(ans[::-1][n:])\n</code></pre>"},{"location":"easy/#knight-packing","title":"Knight Packing","text":"Solution in Python Python <pre><code>if int(input()) % 2:\nprint(\"first\")\nelse:\nprint(\"second\")\n</code></pre>"},{"location":"easy/#knot-knowledge","title":"Knot Knowledge","text":"Solution in Python Python <pre><code>input()\ntotal = set(input().split())\nknown = set(input().split())\nprint((total - known).pop())\n</code></pre>"},{"location":"easy/#kornislav","title":"Kornislav","text":"Solution in Python Python <pre><code>numbers = sorted([int(d) for d in input().split()])\nprint(numbers[0] * numbers[2])\n</code></pre>"},{"location":"easy/#krizaljka","title":"Kri\u017ealjka","text":"Solution in Python Python <pre><code>a, b = input().split()\nfor i in range(len(a)):\nif a[i] in b:\nj = b.index(a[i])\nbreak\nrows = []\nfor k in range(j):\nrows.append(\".\" * i + b[k] + \".\" * (len(a) - i - 1))\nrows.append(a)\nfor k in range(j + 1, len(b)):\nrows.append(\".\" * i + b[k] + \".\" * (len(a) - i - 1))\nprint(\"\\n\".join(rows))\n</code></pre>"},{"location":"easy/#ladder","title":"Ladder","text":"Solution in Python Python <pre><code>import math\nh, v = [int(d) for d in input().split()]\nprint(math.ceil(h / math.sin(math.radians(v))))\n</code></pre>"},{"location":"easy/#laptop-sticker","title":"Laptop Sticker","text":"Solutions in 3 languages C++GoPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint wc, hc, ws, hs;\ncin &gt;&gt; wc &gt;&gt; hc &gt;&gt; ws &gt;&gt; hs;\nif (wc - 2 &gt;= ws &amp;&amp; hc - 2 &gt;= hs)\n{\ncout &lt;&lt; 1 &lt;&lt; endl;\n}\nelse\n{\ncout &lt;&lt; 0 &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar wc, hc, ws, hs int\nfmt.Scan(&amp;wc)\nfmt.Scan(&amp;hc)\nfmt.Scan(&amp;ws)\nfmt.Scan(&amp;hs)\nif wc-2 &gt;= ws &amp;&amp; hc-2 &gt;= hs {\nfmt.Println(1)\n} else {\nfmt.Println(0)\n}\n}\n</code></pre> <pre><code>wc, hc, ws, hs = [int(d) for d in input().split()]\nif wc - 2 &gt;= ws and hc - 2 &gt;= hs:\nprint(1)\nelse:\nprint(0)\n</code></pre>"},{"location":"easy/#last-factorial-digit","title":"Last Factorial Digit","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nn = int(input())\nnumber = 1\nfor i in range(1, n + 1):\nnumber *= i\nprint(number % 10)\n</code></pre>"},{"location":"easy/#left-beehind","title":"Left Beehind","text":"Solutions in 3 languages GoJavaPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar x, y int\nfor true {\nfmt.Scan(&amp;x)\nfmt.Scan(&amp;y)\nif x == 0 &amp;&amp; y == 0 {\nbreak\n}\nif x+y == 13 {\nfmt.Println(\"Never speak again.\")\n} else if x &gt; y {\nfmt.Println(\"To the convention.\")\n} else if x == y {\nfmt.Println(\"Undecided.\")\n} else {\nfmt.Println(\"Left beehind.\")\n}\n}\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass LeftBeehind {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nwhile (true) {\nint x = s.nextInt();\nint y = s.nextInt();\nif (x == 0 &amp;&amp; y == 0) {\nbreak;\n}\nif (x + y == 13) {\nSystem.out.println(\"Never speak again.\");\n} else if (x &gt; y) {\nSystem.out.println(\"To the convention.\");\n} else if (x == y) {\nSystem.out.println(\"Undecided.\");\n} else {\nSystem.out.println(\"Left beehind.\");\n}\n}\n}\n}\n</code></pre> <pre><code>while True:\nx, y = [int(d) for d in input().split()]\nif not x and not y:\nbreak\nif x + y == 13:\nprint(\"Never speak again.\")\nelif x &gt; y:\nprint(\"To the convention.\")\nelif x == y:\nprint(\"Undecided.\")\nelse:\nprint(\"Left beehind.\")\n</code></pre>"},{"location":"easy/#license-to-launch","title":"License to Launch","text":"Solution in Python Python <pre><code>_ = input()\njunks = [int(d) for d in input().split()]\nprint(junks.index(min(junks)))\n</code></pre>"},{"location":"easy/#line-them-up","title":"Line Them Up","text":"Solution in Python Python <pre><code>n = int(input())\nnames = []\nfor _ in range(n):\nnames.append(input())\norder = []\nfor i in range(1, n):\norder.append(names[i] &gt; names[i - 1])\nif all(order):\nprint(\"INCREASING\")\nelif not any(order):\nprint(\"DECREASING\")\nelse:\nprint(\"NEITHER\")\n</code></pre>"},{"location":"easy/#locust-locus","title":"Locust Locus","text":"Solution in Python Python <pre><code>from math import gcd\nn = int(input())\nl = []\nfor _ in range(n):\ny, c1, c2 = [int(d) for d in input().split()]\ng = gcd(c1, c2)\nl.append(y + g * (c1 // g) * (c2 // g))\nprint(min(l))\n</code></pre>"},{"location":"easy/#logic-functions","title":"Logic Functions","text":"Solution in C++ C++ <pre><code>#include \"logicfunctions.h\"\n// Compute xor\nvoid exclusive(bool x, bool y, bool &amp;ans)\n{\nans = x != y;\n}\n// Compute implication\nvoid implies(bool x, bool y, bool &amp;ans)\n{\nif (x &amp;&amp; !y)\n{\nans = false;\n}\nelse\n{\nans = true;\n}\n}\n// Compute equivalence\nvoid equivalence(bool x, bool y, bool &amp;ans)\n{\nans = x == y;\n}\n</code></pre>"},{"location":"easy/#lost-lineup","title":"Lost Lineup","text":"Solution in Python Python <pre><code>n = int(input())\norder = [int(d) for d in input().split()]\nd = range(1, n)\norder = dict(zip(d, order))\nranges = range(1, n + 1)\nresult = [\"1\"]\nfor k in sorted(order, key=lambda x: order[x]):\nresult.append(str(ranges[k]))\nprint(\" \".join(result))\n</code></pre>"},{"location":"easy/#luhns-checksum-algorithm","title":"Luhn's Checksum Algorithm","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nn = input()[::-1]\nchecksum = 0\nfor i in range(len(n)):\ns = int(n[i]) * (i % 2 + 1)\nif s &gt; 9:\ns = sum([int(d) for d in str(s)])\nchecksum += s\nprint(\"FAIL\" if checksum % 10 else \"PASS\")\n</code></pre>"},{"location":"easy/#magic-trick","title":"Magic Trick","text":"Solution in Python Python <pre><code>s = input()\ncounter = {}\nguess = 1\nfor c in s:\nif c in counter:\nguess = 0\nbreak\nelse:\ncounter[c] = None\nprint(guess)\n</code></pre>"},{"location":"easy/#making-a-meowth","title":"Making A Meowth","text":"Solution in Python Python <pre><code>n, p, x, y = [int(d) for d in input().split()]\nprint(p * x + p // (n - 1) * y)\n</code></pre>"},{"location":"easy/#identifying-map-tiles","title":"Identifying Map Tiles","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"fmt\"\n\"math\"\n)\nfunc main() {\nvar s string\nfmt.Scanln(&amp;s)\nzoom := len(s)\nvar x, y float64\nfor i := 0; i &lt; zoom; i++ {\nd := math.Pow(2, float64(zoom)-float64(i)-1)\nif s[i] == '1' {\nx += d\n} else if s[i] == '2' {\ny += d\n} else if s[i] == '3' {\nx += d\ny += d\n}\n}\nfmt.Printf(\"%d %d %d\", zoom, int64(x), int64(y))\n}\n</code></pre> <pre><code>s = input()\nx, y = 0, 0\nzoom = len(s)\nfor i in range(len(s)):\nd = 2 ** (zoom - i - 1)\nif s[i] == \"1\":\nx += d\nelif s[i] == \"2\":\ny += d\nelif s[i] == \"3\":\nx += d\ny += d\nprint(f\"{zoom} {x} {y}\")\n</code></pre>"},{"location":"easy/#marko","title":"Marko","text":"Solution in Python Python <pre><code>mapping = {\n\"2\": \"abc\",\n\"3\": \"def\",\n\"4\": \"ghi\",\n\"5\": \"jkl\",\n\"6\": \"mno\",\n\"7\": \"pqrs\",\n\"8\": \"tuv\",\n\"9\": \"wxyz\",\n}\nn = []\nfor _ in range(int(input())):\nw = input()\nt = \"\"\nfor c in w:\nfor d, r in mapping.items():\nif c in r:\nt += d\nbreak\nn.append(t)\nd = input()\nprint(sum([d == t for t in n]))\n</code></pre>"},{"location":"easy/#mars-window","title":"Mars Window","text":"Solution in Python Python <pre><code>y = int(input())\nprint(\"YES\" if 26 - ((y - 2018) * 12 - 4) % 26 &lt;= 12 else \"NO\")\n</code></pre>"},{"location":"easy/#math-homework","title":"Math Homework","text":"Solution in Python Python <pre><code>b, d, c, l = [int(d) for d in input().split()]\nsolved = False\nfor i in range(l // b + 1):\nfor j in range((l - b * i) // d + 1):\nfor k in range((l - b * i - d * j) // c + 1):\nif b * i + d * j + c * k == l:\nprint(i, j, k)\nsolved = True\nif not solved:\nprint(\"impossible\")\n</code></pre>"},{"location":"easy/#imperial-measurement","title":"Imperial Measurement","text":"Solution in Python Python <pre><code>mapping = {\n\"th\": \"thou\",\n\"in\": \"inch\",\n\"ft\": \"foot\",\n\"yd\": \"yard\",\n\"ch\": \"chain\",\n\"fur\": \"furlong\",\n\"mi\": \"mile\",\n\"lea\": \"league\",\n}\nnames = list(mapping.values())\nscale = [1, 1000, 12, 3, 22, 10, 8, 3]\nv, a, _, b = input().split()\nv = int(v)\nna, nb = mapping.get(a, a), mapping.get(b, b)\nia, ib = names.index(na), names.index(nb)\nrate = 1\nfor s in scale[min(ia, ib) + 1 : max(ia, ib) + 1]:\nrate *= s\nprint(v * rate if ia &gt; ib else v / rate)\n</code></pre>"},{"location":"easy/#metaprogramming","title":"Metaprogramming","text":"Solution in Python Python <pre><code>c = {}\nwhile True:\ntry:\ns = input()\nexcept:\nbreak\nparts = s.split()\nif parts[0] == \"define\":\nv, n = parts[1:]\nc[n] = int(v)\nelif parts[0] == \"eval\":\nx, y, z = parts[1:]\nif x not in c or z not in c:\nprint(\"undefined\")\nelif y == \"=\":\nprint(\"true\" if c[x] == c[z] else \"false\")\nelif y == \"&gt;\":\nprint(\"true\" if c[x] &gt; c[z] else \"false\")\nelif y == \"&lt;\":\nprint(\"true\" if c[x] &lt; c[z] else \"false\")\n</code></pre>"},{"location":"easy/#methodic-multiplication","title":"Methodic Multiplication","text":"Solution in Python Python <pre><code>a, b = input(), input()\nt = a.count(\"S\") * b.count(\"S\")\nprint(\"S(\" * t + \"0\" + \")\" * t)\n</code></pre>"},{"location":"easy/#metronome","title":"Metronome","text":"Solution in Python Python <pre><code>n = int(input())\nprint(f\"{n/4:.2f}\")\n</code></pre>"},{"location":"easy/#mia","title":"Mia","text":"Solution in Python Python <pre><code>def score(a, b):\nroll = set([a, b])\nif roll == {1, 2}:\nreturn (3, None)\nelif len(roll) == 1:\nreturn (2, a)\nelse:\na, b = min(a, b), max(b, a)\nreturn (1, 10 * b + a)\nwhile True:\nrolls = [int(d) for d in input().split()]\nif not any(rolls):\nbreak\nscore1 = score(*rolls[:2])\nscore2 = score(*rolls[2:])\nif score1 == score2:\nprint(\"Tie.\")\nelif score1[0] == score2[0]:\nprint(f\"Player {1 if score1[1] &gt; score2[1] else 2} wins.\")\nelse:\nprint(f\"Player {1 if score1[0] &gt; score2[0] else 2} wins.\")\n</code></pre>"},{"location":"easy/#missing-numbers","title":"Missing Numbers","text":"Solution in Python Python <pre><code>numbers = []\nfor _ in range(int(input())):\nnumbers.append(int(input()))\nis_good_job = True\nfor i in range(1, max(numbers) + 1):\nif i not in numbers:\nis_good_job = False\nprint(i)\nif is_good_job:\nprint(\"good job\")\n</code></pre>"},{"location":"easy/#mixed-fractions","title":"Mixed Fractions","text":"Solution in Python Python <pre><code>while True:\nm, n = [int(d) for d in input().split()]\nif not m and not n:\nbreak\na = m // n\nb = m % n\nprint(f\"{a} {b} / {n}\")\n</code></pre>"},{"location":"easy/#mjehuric","title":"Mjehuric","text":"Solution in Python Python <pre><code>f = input().split()\nwhile f != [str(d) for d in range(1, 6)]:\nfor i in range(4):\nif f[i] &gt; f[i + 1]:\nf[i], f[i + 1] = f[i + 1], f[i]\nprint(\" \".join(f))\n</code></pre>"},{"location":"easy/#moderate-pace","title":"Moderate Pace","text":"Solution in Python Python <pre><code>n = int(input())\ndistances = [[int(d) for d in input().split()] for _ in range(3)]\nplan = [sorted([d[i] for d in distances])[1] for i in range(n)]\nprint(\" \".join([str(d) for d in plan]))\n</code></pre>"},{"location":"easy/#modulo","title":"Modulo","text":"Solution in Python Python <pre><code>n = set()\nfor _ in range(10):\nn.add(int(input()) % 42)\nprint(len(n))\n</code></pre>"},{"location":"easy/#moscow-dream","title":"Moscow Dream","text":"Solution in Python Python <pre><code>a, b, c, n = [int(d) for d in input().split()]\nif not all(d &gt; 0 for d in [a, b, c]):\nprint(\"NO\")\nelse:\nprint(\"YES\" if a + b + c &gt;= n and n &gt;= 3 else \"NO\")\n</code></pre>"},{"location":"easy/#mosquito-multiplication","title":"Mosquito Multiplication","text":"Solution in Python Python <pre><code>while True:\ntry:\nm, p, l, e, r, s, n = [int(d) for d in input().split()]\nexcept:\nbreak\nfor _ in range(n):\npp = p\np = l // r\nl = e * m\nm = pp // s\nprint(m)\n</code></pre>"},{"location":"easy/#mrcodeformatgrader","title":"MrCodeFormatGrader","text":"Solution in Python Python <pre><code>def f(numbers):\nprev = numbers[0]\nans = {prev: 1}\nfor i in range(1, len(numbers)):\nif numbers[i] == prev + ans[prev]:\nans[prev] += 1\nelse:\nprev = numbers[i]\nans[prev] = 1\nparts = [\nf\"{key}-{key+value-1}\"\nif value &gt; 1\nelse \" \".join([str(d) for d in range(key, key + value)])\nfor key, value in ans.items()\n]\nreturn \", \".join(parts[:-1]) + \" and \" + parts[-1]\nc, n = [int(d) for d in input().split()]\nerrors = [int(d) for d in input().split()]\ncorrect = [i for i in range(1, 1 + c) if i not in errors]\nprint(\"Errors:\", f(errors))\nprint(\"Correct:\", f(correct))\n</code></pre>"},{"location":"easy/#mult","title":"Mult!","text":"Solution in Python Python <pre><code>n = int(input())\nb = None\nfor _ in range(n):\nd = int(input())\nif not b:\nb = d\ncontinue\nif d % b == 0:\nprint(d)\nb = None\n</code></pre>"},{"location":"easy/#musical-scales","title":"Musical Scales","text":"Solution in Python Python <pre><code>notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"]\noffset = [2, 2, 1, 2, 2, 2]\nmajors = {}\nfor i in range(len(notes)):\nname = notes[i]\nprogression = [name]\nfor i in offset:\nindex = (notes.index(progression[-1]) + i) % len(notes)\nprogression.append(notes[index])\nmajors[name] = progression\n_ = input()\nscales = set(input().split())\nprint(\" \".join([n for n in majors if scales &lt; set(majors[n])]) or \"none\")\n</code></pre>"},{"location":"easy/#music-your-way","title":"Music Your Way","text":"Solution in Python Python <pre><code>cols = input().split()\nm = int(input())\nsongs = [input().split() for _ in range(m)]\nn = int(input())\nfor i in range(n):\ncol = input()\nindex = cols.index(col)\nsongs = sorted(songs, key=lambda k: k[index])\nprint(\" \".join(cols))\nfor song in songs:\nprint(\" \".join(song))\nif i &lt; n - 1:\nprint()\n</code></pre>"},{"location":"easy/#nasty-hacks","title":"Nasty Hacks","text":"Solutions in 2 languages C++Python <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint n, r, e, c;\ncin &gt;&gt; n;\nfor (int i = 0; i &lt; n; i++)\n{\ncin &gt;&gt; r &gt;&gt; e &gt;&gt; c;\nif ((e - c) &gt; r)\n{\ncout &lt;&lt; \"advertise\";\n}\nelse if ((e - c) &lt; r)\n{\ncout &lt;&lt; \"do not advertise\";\n}\nelse\n{\ncout &lt;&lt; \"does not matter\";\n}\n}\n}\n</code></pre> <pre><code>for _ in range(int(input())):\nr, e, c = [int(d) for d in input().split()]\nif e &gt; r + c:\nprint(\"advertise\")\nelif e &lt; r + c:\nprint(\"do not advertise\")\nelse:\nprint(\"does not matter\")\n</code></pre>"},{"location":"easy/#no-duplicates","title":"No Duplicates","text":"Solution in Python Python <pre><code>words = input().split()\ncounter = {}\nrepeated = False\nfor w in words:\nif w in counter:\nrepeated = True\nbreak\nelse:\ncounter[w] = None\nif repeated:\nprint(\"no\")\nelse:\nprint(\"yes\")\n</code></pre>"},{"location":"easy/#no-thanks","title":"No Thanks!","text":"Solution in Python Python <pre><code>n = int(input())\nv = sorted([int(d) for d in input().split()])\nprev = v[0]\nans = {prev: 1}\nfor i in range(1, n):\nif v[i] == prev + ans[prev]:\nans[prev] += 1\nelse:\nprev = v[i]\nans[prev] = 1\nprint(sum(ans.keys()))\n</code></pre>"},{"location":"easy/#n-sum","title":"N-sum","text":"Solution in Python Python <pre><code>_ = int(input())\nnumbers = []\nfor d in input().split():\nnumbers.append(int(d))\nprint(sum(numbers))\n</code></pre>"},{"location":"easy/#number-fun","title":"Number Fun","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\na, b, c = [int(d) for d in input().split()]\nif a + b == c or a * b == c or a - b == c or b - a == c or a / b == c or b / a == c:\nprint(\"Possible\")\nelse:\nprint(\"Impossible\")\n</code></pre>"},{"location":"easy/#odd-echo","title":"Odd Echo","text":"Solution in Python Python <pre><code>n = int(input())\nwords = []\nfor _ in range(n):\nwords.append(input())\nfor i in range(0, n, 2):\nprint(words[i])\n</code></pre>"},{"location":"easy/#odd-gnome","title":"Odd Gnome","text":"Solution in Python Python <pre><code>n = int(input())\nfor _ in range(n):\ng = [int(d) for d in input().split()][1:]\nprev = g[0]\nfor i in range(1, len(g)):\nif g[i] != prev + 1:\nbreak\nprev = g[i]\nprint(i + 1)\n</code></pre>"},{"location":"easy/#oddities","title":"Oddities","text":"Solution in Python Python <pre><code>n = int(input())\nfor _ in range(n):\nx = int(input())\nif x % 2:\nres = \"odd\"\nelse:\nres = \"even\"\nprint(f\"{x} is {res}\")\n</code></pre>"},{"location":"easy/#odd-man-out","title":"Odd Man Out","text":"Solution in Python Python <pre><code>from collections import Counter\nn = int(input())\nfor i in range(n):\n_ = input()\nc = Counter(input().split())\nprint(f\"Case #{i+1}: {' '.join(v for v in c if c[v]==1)}\")\n</code></pre>"},{"location":"easy/#reverse","title":"Reverse","text":"Solution in Python Python <pre><code>n = int(input())\nnumbers = []\nfor _ in range(n):\nnumbers.append(int(input()))\nfor d in numbers[::-1]:\nprint(d)\n</code></pre>"},{"location":"easy/#oktalni","title":"Oktalni","text":"Solution in Python Python <pre><code>import math\nmapping = {\n\"000\": \"0\",\n\"001\": \"1\",\n\"010\": \"2\",\n\"011\": \"3\",\n\"100\": \"4\",\n\"101\": \"5\",\n\"110\": \"6\",\n\"111\": \"7\",\n}\nb = input()\nlength = 3 * math.ceil(len(b) / 3)\nb = b.zfill(length)\nprint(\"\".join([mapping[b[i : i + 3]] for i in range(0, length, 3)]))\n</code></pre>"},{"location":"easy/#one-chicken-per-person","title":"One Chicken Per Person!","text":"Solution in Python Python <pre><code>n, m = [int(d) for d in input().split()]\ndiff = n - m\nif diff &gt; 0:\nprint(f\"Dr. Chaz needs {diff} more piece{'s' if diff &gt;1 else ''} of chicken!\")\nelse:\ndiff = abs(diff)\nprint(\nf\"Dr. Chaz will have {diff} piece{'s' if diff &gt;1 else ''} of chicken left over!\"\n)\n</code></pre>"},{"location":"easy/#ostgotska","title":"\u00d6stg\u00f6tska","text":"Solution in Python Python <pre><code>sentence = input()\nwords = sentence.split()\nif len([w for w in words if \"ae\" in w]) / len(words) &gt;= 0.4:\nprint(\"dae ae ju traeligt va\")\nelse:\nprint(\"haer talar vi rikssvenska\")\n</code></pre>"},{"location":"easy/#overdraft","title":"Overdraft","text":"Solution in Python Python <pre><code>n = int(input())\ns = 0\nb = 0\nfor _ in range(n):\nt = int(input())\nif t &gt; 0:\nb += t\nelif b + t &lt; 0:\ns -= b + t\nb = 0\nelse:\nb += t\nprint(s)\n</code></pre>"},{"location":"easy/#the-owl-and-the-fox","title":"The Owl and the Fox","text":"Solution in Python Python <pre><code>def sd(n):\nreturn sum([int(d) for d in str(n)])\nfor _ in range(int(input())):\nn = int(input())\ns = sd(n) - 1\nd = n - 1\nwhile True:\nif sd(d) == s:\nbreak\nd -= 1\nprint(d)\n</code></pre>"},{"location":"easy/#pachyderm-peanut-packing","title":"Pachyderm Peanut Packing","text":"Solution in Python Python <pre><code>def inbox(coords, x, y):\nif x &gt;= coords[0] and x &lt;= coords[2] and y &gt;= coords[1] and y &lt;= coords[3]:\nreturn True\nreturn False\nwhile True:\nn = int(input())\nif not n:\nbreak\nbox = {}\nfor i in range(n):\ndesc = input().split()\nsize = desc[-1]\ncoords = [float(d) for d in desc[:-1]]\nbox[i] = (coords, size)\nm = int(input())\nfor _ in range(m):\ndesc = input().split()\nsize = desc[-1]\nx, y = [float(d) for d in desc[:-1]]\nfloor = True\nfor i in range(n):\ncoords, box_size = box[i]\nif inbox(coords, x, y):\nfloor = False\nbreak\nif floor:\nstatus = \"floor\"\nelse:\nstatus = \"correct\" if box_size == size else box_size\nprint(size, status)\nprint()\n</code></pre>"},{"location":"easy/#parent-gap","title":"Parent Gap","text":"Solution in Python Python <pre><code>from datetime import datetime\nyear = int(input())\nmother = datetime(year, 5, 1).isoweekday()\nfather = datetime(year, 6, 1).isoweekday()\nx = 7 - mother\ny = 7 - father\ndaymother = 1 + x + 7\ndayfather = 1 + y + 14\ndaymother = datetime(year, 5, daymother)\ndayfather = datetime(year, 6, dayfather)\nprint(((dayfather - daymother).days) // 7, \"weeks\")\n</code></pre>"},{"location":"easy/#parket","title":"Parket","text":"Solution in Python Python <pre><code>import math\nr, b = [int(d) for d in input().split()]\nw = math.floor((r + b) ** 0.5)\nwhile w:\nif (r + b) / w == (r + 4) / 2 - w:\nprint((r + 4) // 2 - w, w)\nbreak\nw -= 1\n</code></pre>"},{"location":"easy/#parking","title":"Parking","text":"Solution in Python Python <pre><code>a, b, c = [int(d) for d in input().split()]\nt = [0] * 100\nfor _ in range(3):\nstart, end = [int(d) - 1 for d in input().split()]\nfor i in range(start, end):\nt[i] += 1\ntotal = 0\nmapping = {\n3: c,\n2: b,\n1: a,\n}\nfor s in t:\ntotal += mapping.get(s, 0) * s\nprint(total)\n</code></pre>"},{"location":"easy/#parking_1","title":"Parking","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\n_ = input()\npositions = [int(d) for d in input().split()]\nprint(2 * (max(positions) - min(positions)))\n</code></pre>"},{"location":"easy/#patuljci","title":"Patuljci","text":"Solution in Python Python <pre><code>d = [int(input()) for _ in range(9)]\ndiff = sum(d) - 100\nend = False\nfor i in range(8):\nfor j in range(i + 1, 9):\nif d[i] + d[j] == diff:\nend = True\nbreak\nif end:\nbreak\nprint(\"\\n\".join([str(d[k]) for k in range(9) if k not in [i, j]]))\n</code></pre>"},{"location":"easy/#paul-eigon","title":"Paul Eigon","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar n, p, q int\nfmt.Scan(&amp;n)\nfmt.Scan(&amp;p)\nfmt.Scan(&amp;q)\nif ((p+q)/n)%2 == 0 {\nfmt.Println(\"paul\")\n} else {\nfmt.Println(\"opponent\")\n}\n}\n</code></pre> <pre><code>n, p, q = [int(d) for d in input().split()]\nif ((p + q) // n) % 2 == 0:\nprint(\"paul\")\nelse:\nprint(\"opponent\")\n</code></pre>"},{"location":"easy/#pea-soup-and-pancakes","title":"Pea Soup and Pancakes","text":"Solution in Python Python <pre><code>found = False\nfor _ in range(int(input())):\nk = int(input())\nname = input()\nitems = [input() for _ in range(k)]\nif \"pea soup\" in items and \"pancakes\" in items:\nfound = True\nprint(name)\nbreak\nif not found:\nprint(\"Anywhere is fine I guess\")\n</code></pre>"},{"location":"easy/#peragrams","title":"Peragrams","text":"Solution in Python Python <pre><code>from collections import Counter\ns = Counter(input())\nv = [d for d in s.values() if d % 2]\nv = sorted(v)[:-1]\nprint(len(v))\n</code></pre>"},{"location":"easy/#perket","title":"Perket","text":"Solution in Python Python <pre><code>from itertools import combinations\nn = int(input())\nl = [[int(d) for d in input().split()] for _ in range(n)]\nc = []\nfor i in range(1, n + 1):\nc.extend(list(combinations(l, i)))\nd = []\nfor i in c:\ns, b = 1, 0\nfor x, y in i:\ns *= x\nb += y\nd.append(abs(s - b))\nprint(min(d))\n</code></pre>"},{"location":"easy/#permuted-arithmetic-sequence","title":"Permuted Arithmetic Sequence","text":"Solution in Python Python <pre><code>def arithmetic(n):\nd = [n[i] - n[i + 1] for i in range(len(n) - 1)]\nreturn True if len(set(d)) == 1 else False\nfor _ in range(int(input())):\ns = input().split()\nn = [int(d) for d in s[1:]]\nif arithmetic(n):\nprint(\"arithmetic\")\nelif arithmetic(sorted(n)):\nprint(\"permuted arithmetic\")\nelse:\nprint(\"non-arithmetic\")\n</code></pre>"},{"location":"easy/#pervasive-heart-monitor","title":"Pervasive Heart Monitor","text":"Solution in Python Python <pre><code>while True:\ntry:\nline = input().split()\nexcept:\nbreak\nname, rate = [], []\nfor p in line:\nif p.isalpha():\nname.append(p)\nelse:\nrate.append(float(p))\nname = \" \".join(name)\nrate = sum(rate) / len(rate)\nprint(f\"{rate:.6f} {name}\")\n</code></pre>"},{"location":"easy/#pet","title":"Pet","text":"Solution in Python Python <pre><code>winner, max_score = 0, 0\nfor i in range(5):\nscore = sum([int(d) for d in input().split()])\nif score &gt; max_score:\nmax_score = score\nwinner = i + 1\nprint(winner, max_score)\n</code></pre>"},{"location":"easy/#piece-of-cake","title":"Piece of Cake!","text":"Solution in Python Python <pre><code>n, h, v = [int(d) for d in input().split()]\nprint(4 * max(h * v, (n - h) * (n - v), h * (n - v), v * (n - h)))\n</code></pre>"},{"location":"easy/#pizza-crust","title":"Pizza Crust","text":"Solution in Python Python <pre><code>r, c = [int(d) for d in input().split()]\nprint(f\"{(r-c)**2 / r**2 * 100:.6f}\")\n</code></pre>"},{"location":"easy/#planetaris","title":"Planetaris","text":"Solution in Python Python <pre><code>_, a = [int(d) for d in input().split()]\ne = sorted([int(d) + 1 for d in input().split()])\nt = 0\nfor s in e:\nif a &gt;= s:\nt += 1\na -= s\nelse:\nbreak\nprint(t)\n</code></pre>"},{"location":"easy/#planina","title":"Planina","text":"Solution in Python Python <pre><code>def p(n):\nif n == 1:\nreturn 3\nelse:\nreturn p(n - 1) * 2 - 1\nn = int(input())\nprint(p(n) ** 2)\n</code></pre>"},{"location":"easy/#planting-trees","title":"Planting Trees","text":"Solution in Python Python <pre><code>n = int(input())\nt = [int(d) for d in input().split()]\ndays = [v + d for v, d in zip(sorted(t, reverse=True), range(1, n + 1))]\nprint(max(days) + 1)\n</code></pre>"},{"location":"easy/#pokechat","title":"Pokechat","text":"Solution in Python Python <pre><code>chars = input()\nids = input()\nids = [int(ids[i : i + 3]) - 1 for i in range(0, len(ids), 3)]\nprint(\"\".join([chars[i] for i in ids]))\n</code></pre>"},{"location":"easy/#poker-hand","title":"Poker Hand","text":"Solution in Python Python <pre><code>from collections import Counter\nhands = [h[0] for h in input().split()]\nprint(max(Counter(hands).values()))\n</code></pre>"},{"location":"easy/#polynomial-multiplication-1","title":"Polynomial Multiplication 1","text":"Solution in Python Python <pre><code>from collections import Counter\nfor _ in range(int(input())):\nn = int(input())\na = [int(d) for d in input().split()]\nm = int(input())\nb = [int(d) for d in input().split()]\np = Counter()\nfor i in range(n + 1):\nfor j in range(m + 1):\np[i + j] += a[i] * b[j]\nkeys = max([k for k in p.keys() if p[k] != 0])\nprint(keys)\nprint(\" \".join([str(p[k]) for k in range(keys + 1)]))\n</code></pre>"},{"location":"easy/#popularity-contest","title":"Popularity Contest","text":"Solution in Python Python <pre><code>n, m = [int(d) for d in input().split()]\np = [0] * n\nfor _ in range(m):\na, b = [int(d) - 1 for d in input().split()]\np[a] += 1\np[b] += 1\nprint(\" \".join([str(a - b) for a, b in zip(p, range(1, 1 + n))]))\n</code></pre>"},{"location":"easy/#pot","title":"Pot","text":"Solution in Python Python <pre><code>n = int(input())\ntotal = 0\nfor _ in range(n):\nline = input()\nn, p = int(line[:-1]), int(line[-1])\ntotal += n**p\nprint(total)\n</code></pre>"},{"location":"easy/#printing-costs","title":"Printing Costs","text":"Solution in Python Python <pre><code>t = \"\"\"\n    0        !   9        \"   6        #  24        $  29        %  22\n&amp;  24        '   3        (  12        )  12        *  17        +  13\n,   7        -   7        .   4        /  10        0  22        1  19\n2  22        3  23        4  21        5  27        6  26        7  16\n8  23        9  26        :   8        ;  11        &lt;  10        =  14\n&gt;  10        ?  15        @  32        A  24        B  29        C  20\nD  26        E  26        F  20        G  25        H  25        I  18\nJ  18        K  21        L  16        M  28        N  25        O  26\nP  23        Q  31        R  28        S  25        T  16        U  23\nV  19        W  26        X  18        Y  14        Z  22        [  18\n\\  10        ]  18        ^   7        _   8        `   3        a  23\nb  25        c  17        d  25        e  23        f  18        g  30\nh  21        i  15        j  20        k  21        l  16        m  22\nn  18        o  20        p  25        q  25        r  13        s  21\nt  17        u  17        v  13        w  19        x  13        y  24\nz  19        {  18        |  12        }  18        ~   9\n\"\"\"\nm = []\nfor row in t.splitlines():\nif not row:\ncontinue\nvalues = row.split()\nif len(values) % 2:\nvalues.insert(0, \" \")\nfor i in range(0, len(values), 2):\nm.append((values[i], int(values[i + 1])))\nm = dict(m)\nwhile True:\ntry:\ns = input()\nexcept:\nbreak\nprint(sum([m[c] for c in s]))\n</code></pre>"},{"location":"easy/#provinces-and-gold","title":"Provinces and Gold","text":"Solution in Python Python <pre><code>g, s, c = [int(d) for d in input().split()]\nbuying = 3 * g + 2 * s + 1 * c\nresult = []\nif buying &gt;= 8:\nresult.append(\"Province\")\nelif buying &gt;= 5:\nresult.append(\"Duchy\")\nelif buying &gt;= 2:\nresult.append(\"Estate\")\nif buying &gt;= 6:\nresult.append(\"Gold\")\nelif buying &gt;= 3:\nresult.append(\"Silver\")\nelse:\nresult.append(\"Copper\")\nprint(\" or \".join(result))\n</code></pre>"},{"location":"easy/#prsteni","title":"Prsteni","text":"Solution in Python Python <pre><code>import math\n_ = input()\nnumbers = [int(d) for d in input().split()]\nbase = numbers.pop(0)\ngcd = [math.gcd(base, n) for n in numbers]\nfor g, n in zip(gcd, numbers):\nprint(f\"{int(base/g)}/{int(n/g)}\")\n</code></pre>"},{"location":"easy/#prva","title":"Prva","text":"Solution in Python Python <pre><code>r, c = [int(d) for d in input().split()]\npuzzle = []\nfor _ in range(r):\npuzzle.append(input())\nwords = set()\nfor row in puzzle:\nwords.update([w for w in row.split(\"#\") if len(w) &gt; 1])\nfor i in range(c):\ncol = \"\".join([row[i] for row in puzzle])\nwords.update([w for w in col.split(\"#\") if len(w) &gt; 1])\nprint(sorted(words)[0])\n</code></pre>"},{"location":"easy/#ptice","title":"Ptice","text":"Solution in Python Python <pre><code>def adrian(n):\nif n == 0:\nreturn \"\"\nelif n == 1:\nreturn \"A\"\nelif n == 2:\nreturn \"AB\"\nelif n == 3:\nreturn \"ABC\"\nelse:\nduplicate = n // 3\nreturn adrian(3) * duplicate + adrian(n % 3)\ndef bruno(n):\nif n == 0:\nreturn \"\"\nelif n == 1:\nreturn \"B\"\nelif n == 2:\nreturn \"BA\"\nelif n == 3:\nreturn \"BAB\"\nelif n == 4:\nreturn \"BABC\"\nelse:\nduplicate = n // 4\nreturn bruno(4) * duplicate + bruno(n % 4)\ndef goran(n):\nif n == 0:\nreturn \"\"\nelif n in [1, 2]:\nreturn \"C\" * n\nelif n in [3, 4]:\nreturn \"CC\" + \"A\" * (n - 2)\nelif n in [5, 6]:\nreturn \"CCAA\" + \"B\" * (n - 4)\nelse:\nduplicate = n // 6\nreturn goran(6) * duplicate + goran(n % 6)\ndef get_score(ans, guess):\nreturn sum([a == g for a, g in zip(ans, guess)])\nn = int(input())\nans = input()\nresult = {}\nresult[\"Adrian\"] = get_score(ans, adrian(n))\nresult[\"Bruno\"] = get_score(ans, bruno(n))\nresult[\"Goran\"] = get_score(ans, goran(n))\nbest = max(result.values())\nprint(best)\nfor name, score in result.items():\nif score == best:\nprint(name)\n</code></pre>"},{"location":"easy/#building-pyramids","title":"Building Pyramids","text":"Solution in Python Python <pre><code>n = int(input())\nheight = 0\nwhile True:\nheight += 1\nblocks = (2 * height - 1) ** 2\nif blocks &gt; n:\nheight -= 1\nbreak\nn -= blocks\nprint(height)\n</code></pre>"},{"location":"easy/#quality-adjusted-life-year","title":"Quality-Adjusted Life-Year","text":"Solution in Python Python <pre><code>qaly = 0\nfor _ in range(int(input())):\nq, y = input().split()\nq, y = float(q), float(y)\nqaly += q * y\nprint(qaly)\n</code></pre>"},{"location":"easy/#quadrant-selection","title":"Quadrant Selection","text":"Solutions in 4 languages GoJavaPythonRust <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar x, y int\nfmt.Scan(&amp;x)\nfmt.Scan(&amp;y)\nif x &gt; 0 {\nif y &gt; 0 {\nfmt.Println(1)\n} else {\nfmt.Println(4)\n}\n} else {\nif y &gt; 0 {\nfmt.Println(2)\n} else {\nfmt.Println(3)\n}\n}\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass QuadrantSelection {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint x = s.nextInt();\nint y = s.nextInt();\nif (x &gt; 0) {\nif (y &gt; 0) {\nSystem.out.println(1);\n} else {\nSystem.out.println(4);\n}\n} else {\nif (y &gt; 0) {\nSystem.out.println(2);\n} else {\nSystem.out.println(3);\n}\n}\n}\n}\n</code></pre> <pre><code>x = int(input())\ny = int(input())\nif x &gt; 0:\nif y &gt; 0:\nprint(1)\nelse:\nprint(4)\nelse:\nif y &gt; 0:\nprint(2)\nelse:\nprint(3)\n</code></pre> <pre><code>fn main() {\nlet mut line1 = String::new();\nstd::io::stdin().read_line(&amp;mut line1).unwrap();\nlet x: i32 = line1.trim().parse().unwrap();\nlet mut line2 = String::new();\nstd::io::stdin().read_line(&amp;mut line2).unwrap();\nlet y: i32 = line2.trim().parse().unwrap();\nif x &gt; 0 {\nif y &gt; 0 {\nprintln!(\"1\");\n} else {\nprintln!(\"4\");\n}\n} else {\nif y &gt; 0 {\nprintln!(\"2\");\n} else {\nprintln!(\"3\");\n}\n}\n}\n</code></pre>"},{"location":"easy/#quick-brown-fox","title":"Quick Brown Fox","text":"Solution in Python Python <pre><code>import string\nfor _ in range(int(input())):\np = set([c for c in input().lower() if c.isalpha()])\nif len(p) == 26:\nprint(\"pangram\")\nelse:\nprint(\nf\"missing {''.join([c for c in string.ascii_lowercase[:26] if c not in p])}\"\n)\n</code></pre>"},{"location":"easy/#quick-estimates","title":"Quick Estimates","text":"Solutions in 2 languages JavaPython <pre><code>import java.util.Scanner;\nclass QuickEstimates {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint n = s.nextInt();\nfor (int i = 0; i &lt; n; i++) {\nString cost = s.next();\nSystem.out.println(cost.length());\n}\n}\n}\n</code></pre> <pre><code>for _ in range(int(input())):\nprint(len(input()))\n</code></pre>"},{"location":"easy/#quite-a-problem","title":"Quite a Problem","text":"Solution in Python Python <pre><code>while True:\ntry:\nline = input()\nexcept:\nbreak\nif \"problem\" in line.lower():\nprint(\"yes\")\nelse:\nprint(\"no\")\n</code></pre>"},{"location":"easy/#r2","title":"R2","text":"Solutions in 4 languages C++GoJavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint r1, s;\ncin &gt;&gt; r1 &gt;&gt; s;\ncout &lt;&lt; 2 * s - r1 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar r1, s int\nfmt.Scan(&amp;r1)\nfmt.Scan(&amp;s)\nfmt.Println(2*s - r1)\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass R2 {\npublic static void main(String[] args) {\nScanner scanner = new Scanner(System.in);\nint r1 = scanner.nextInt();\nint s = scanner.nextInt();\nSystem.out.println(2 * s - r1);\n}\n}\n</code></pre> <pre><code>r1, s = [int(d) for d in input().split()]\nr2 = 2 * s - r1\nprint(r2)\n</code></pre>"},{"location":"easy/#racing-around-the-alphabet","title":"Racing Around the Alphabet","text":"Solution in Python Python <pre><code>import math\ntokens = dict([(chr(c), c - ord(\"A\") + 1) for c in range(ord(\"A\"), ord(\"Z\") + 1)])\ntokens[\" \"] = 27\ntokens[\"'\"] = 28\nt = math.pi * 60 / (28 * 15)\nfor _ in range(int(input())):\nm = input()\ntotal = 1\nprev = m[0]\nfor c in m[1:]:\ndist = abs(tokens[prev] - tokens[c])\ntotal += 1 + t * min(dist, 28 - dist)\nprev = c\nprint(total)\n</code></pre>"},{"location":"easy/#ragged-right","title":"Ragged Right","text":"Solution in Python Python <pre><code>l = []\nwhile True:\ntry:\ns = input()\nexcept:\nbreak\nl.append(len(s))\nm = max(l)\nprint(sum([(n - m) ** 2 for n in l[:-1]]))\n</code></pre>"},{"location":"easy/#railroad","title":"Railroad","text":"Solutions in 3 languages GoJavaPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar x, y int\nfmt.Scan(&amp;x)\nfmt.Scan(&amp;y)\nif y%2 == 1 {\nfmt.Println(\"impossible\")\n} else {\nfmt.Println(\"possible\")\n}\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass Railroad {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint x = s.nextInt();\nint y = s.nextInt();\nif (y % 2 == 1) {\nSystem.out.println(\"impossible\");\n} else {\nSystem.out.println(\"possible\");\n}\n}\n}\n</code></pre> <pre><code>_, y = [int(d) for d in input().split()]\nif y % 2:\nprint(\"impossible\")\nelse:\nprint(\"possible\")\n</code></pre>"},{"location":"easy/#a-rank-problem","title":"A Rank Problem","text":"Solution in Python Python <pre><code>n, m = [int(d) for d in input().split()]\nranking = [f\"T{i}\" for i in range(1, 1 + n)]\nfor _ in range(m):\ni, j = input().split()\nif ranking.index(i) &lt; ranking.index(j):\ncontinue\nranking.remove(j)\nranking.insert(ranking.index(i) + 1, j)\nprint(\" \".join(ranking))\n</code></pre>"},{"location":"easy/#rating-problems","title":"Rating Problems","text":"Solutions in 2 languages JavaPython <pre><code>import java.util.Scanner;\nclass RatingProblems {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint n = s.nextInt();\nint k = s.nextInt();\nint score = 0;\nfor (int i = 0; i &lt; k; i++) {\nscore += s.nextInt();\n}\nfloat min = (score - 3 * (n - k)) / (float) n;\nfloat max = (score + 3 * (n - k)) / (float) n;\nSystem.out.println(min + \" \" + max);\n}\n}\n</code></pre> <pre><code>n, k = [int(d) for d in input().split()]\nscore = 0\nfor _ in range(k):\nscore += int(input())\nprint((score - 3 * (n - k)) / n, (score + 3 * (n - k)) / n)\n</code></pre>"},{"location":"easy/#a-rational-sequence-2","title":"A Rational Sequence 2","text":"Solution in Python Python <pre><code>def f(l, r):\nif l == r:\nreturn 1\nelif l &gt; r:\nreturn 2 * f(l - r, r) + 1\nelse:\nreturn 2 * f(l, r - l)\nfor _ in range(int(input())):\nk, v = input().split()\nl, r = [int(d) for d in v.split(\"/\")]\nprint(f\"{k} {f(l,r)}\")\n</code></pre>"},{"location":"easy/#scaling-recipes","title":"Scaling Recipes","text":"Solution in Python Python <pre><code>for i in range(int(input())):\nr, p, d = [int(d) for d in input().split()]\nrecipe = {}\nmain = None\nfor _ in range(r):\nname, weight, percent = input().split()\nweight = float(weight)\npercent = float(percent)\nif percent == 100.0:\nmain = name\nrecipe[name] = (weight, percent)\nscale = d / p\nprint(f\"Recipe # {i+1}\")\ndw = recipe[main][0] * scale\nfor k in recipe:\nprint(k, f\"{recipe[k][1] * dw / 100:.1f}\")\nprint(\"-\" * 40)\n</code></pre>"},{"location":"easy/#recount","title":"Recount","text":"Solution in Python Python <pre><code>from collections import Counter\nc = Counter()\nwhile True:\ntry:\nname = input()\nexcept:\nbreak\nc[name] += 1\nhighest = max(c.values())\nnames = [k for k in c if c[k] == highest]\nprint(\"Runoff!\" if len(names) &gt; 1 else names.pop())\n</code></pre>"},{"location":"easy/#rectangle-area","title":"Rectangle Area","text":"Solution in Python Python <pre><code>x1, y1, x2, y2 = [float(d) for d in input().split()]\nprint(abs((x1 - x2) * (y1 - y2)))\n</code></pre>"},{"location":"easy/#reduced-id-numbers","title":"Reduced ID Numbers","text":"Solution in Python Python <pre><code>g = int(input())\nids = []\nfor _ in range(g):\nids.append(int(input()))\nm = 1\nwhile True:\nv = [d % m for d in ids]\nif g == len(set(v)):\nbreak\nm += 1\nprint(m)\n</code></pre>"},{"location":"easy/#relocation","title":"Relocation","text":"Solution in Python Python <pre><code>n, q = [int(d) for d in input().split()]\nx = [int(d) for d in input().split()]\nfor _ in range(q):\nreq = [int(d) for d in input().split()]\nif req[0] == 1:\nx[req[1] - 1] = req[2]\nelif req[0] == 2:\nprint(abs(x[req[1] - 1] - x[req[2] - 1]))\n</code></pre>"},{"location":"easy/#reversed-binary-numbers","title":"Reversed Binary Numbers","text":"Solution in Python Python <pre><code>n = int(input())\nb = []\nwhile n:\nb.append(n % 2)\nn //= 2\nprint(sum([d * (2**p) for d, p in zip(b, reversed(range(len(b))))]))\n</code></pre>"},{"location":"easy/#reverse-rot","title":"Reverse Rot","text":"Solution in Python Python <pre><code>import string\nrotations = string.ascii_uppercase + \"_.\"\ndef rotate(c, n):\nindex = (rotations.index(c) + n) % 28\nreturn rotations[index]\nwhile True:\nline = input()\nif line == \"0\":\nbreak\nn, m = line.split()\nn = int(n)\nprint(\"\".join([rotate(c, n) for c in m[::-1]]))\n</code></pre>"},{"location":"easy/#rijeci","title":"Rije\u010di","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar n int\nfmt.Scan(&amp;n)\na := 1\nb := 0\nfor i := 0; i &lt; n; i++ {\na, b = b, b+a\n}\nfmt.Println(a, b)\n}\n</code></pre> <pre><code>k = int(input())\na, b = 1, 0\nfor _ in range(k):\na, b = b, b + a\nprint(a, b)\n</code></pre>"},{"location":"easy/#roaming-romans","title":"Roaming Romans","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar x float64\nfmt.Scan(&amp;x)\nfmt.Println(int(x*1000*5280/4854 + 0.5))\n}\n</code></pre> <pre><code>x = float(input())\nprint(int(x * 1000 * 5280 / 4854 + 0.5))\n</code></pre>"},{"location":"easy/#run-length-encoding-run","title":"Run-Length Encoding, Run!","text":"Solution in Python Python <pre><code>action, s = input().split()\nif action == \"D\":\nprint(\"\".join([s[i] * int(s[i + 1]) for i in range(0, len(s), 2)]))\nelif action == \"E\":\nparts = []\nprev, t = s[0], 1\nfor c in s[1:]:\nif c != prev:\nparts.append((prev, t))\nt = 1\nprev = c\nelse:\nt += 1\nparts.append((prev, t))\nprint(\"\".join([f\"{k}{v}\" for k, v in parts]))\n</code></pre>"},{"location":"easy/#saving-daylight","title":"Saving Daylight","text":"Solution in Python Python <pre><code>while True:\ntry:\ns = input().split()\nexcept:\nbreak\nt1, t2 = s[-2:]\nh1, m1 = [int(d) for d in t1.split(\":\")]\nh2, m2 = [int(d) for d in t2.split(\":\")]\nmins = (h2 - h1) * 60 + (m2 - m1)\nh = mins // 60\nm = mins % 60\nans = s[:-2]\nans.extend([str(h), \"hours\", str(m), \"minutes\"])\nprint(\" \".join(ans))\n</code></pre>"},{"location":"easy/#saving-for-retirement","title":"Saving For Retirement","text":"Solution in Python Python <pre><code>import math\nB, Br, Bs, A, As = [int(d) for d in input().split()]\nrate = Bs * (Br - B) / As\nAr = math.ceil(rate) + A\nif rate.is_integer():\nAr += 1\nprint(Ar)\n</code></pre>"},{"location":"easy/#scaling-recipe","title":"Scaling Recipe","text":"Solution in Python Python <pre><code>import math\nn, x, y = [int(d) for d in input().split()]\ni = [int(input()) for _ in range(n)]\n# for python 3.9+ (https://docs.python.org/3.9/library/math.html#math.gcd)\n# s = math.gcd(x, *i)\ns = math.gcd(x, i[0])\nfor k in range(1, n):\ns = math.gcd(s, i[k])\nx /= s\ni = [v / s for v in i]\nscale = y / x\nfor v in i:\nprint(int(scale * v))\n</code></pre>"},{"location":"easy/#school-spirit","title":"School Spirit","text":"Solution in Python Python <pre><code>n = int(input())\ns = []\nfor _ in range(n):\ns.append(int(input()))\ndef group_score(s):\ngs = 0\nfor i in range(len(s)):\ngs += s[i] * (0.8**i)\nreturn 0.2 * gs\nprint(group_score(s))\nnew_gs = []\nfor i in range(n):\nnew_gs.append(group_score([s[j] for j in range(n) if j != i]))\nprint(sum(new_gs) / len(new_gs))\n</code></pre>"},{"location":"easy/#secret-message","title":"Secret Message","text":"Solution in Python Python <pre><code>import math\nfor _ in range(int(input())):\nm = input()\nk = math.ceil(len(m) ** 0.5)\nm += \"*\" * (k * k - len(m))\nrows = [m[i : i + k] for i in range(0, len(m), k)]\ns = []\nfor i in range(k):\ns.append(\"\".join([row[i] for row in rows if row[i] != \"*\"][::-1]))\nprint(\"\".join(s))\n</code></pre>"},{"location":"easy/#secure-doors","title":"Secure Doors","text":"Solution in Python Python <pre><code>pool = set()\nfor _ in range(int(input())):\naction, name = input().split()\nif action == \"entry\":\nprint(name, \"entered\", \"(ANOMALY)\" if name in pool else \"\")\npool.add(name)\nelif action == \"exit\":\nprint(name, \"exited\", \"(ANOMALY)\" if name not in pool else \"\")\npool.discard(name)\n</code></pre>"},{"location":"easy/#server","title":"Server","text":"Solution in Python Python <pre><code>_, t = [int(d) for d in input().split()]\ntotal, used = 0, 0\nfor v in [int(d) for d in input().split()]:\nif used + v &lt;= t:\ntotal += 1\nused += v\nelse:\nbreak\nprint(total)\n</code></pre>"},{"location":"easy/#seven-wonders","title":"Seven Wonders","text":"Solution in Python Python <pre><code>from collections import Counter\nc = Counter(input())\nscore = 0\nfor value in c.values():\nscore += value**2\nif len(c.values()) == 3:\nscore += 7 * min(c.values())\nprint(score)\n</code></pre>"},{"location":"easy/#shattered-cake","title":"Shattered Cake","text":"Solution in Python Python <pre><code>w, n = int(input()), int(input())\ntotal = 0\nfor _ in range(n):\n_w, _l = [int(d) for d in input().split()]\ntotal += _w * _l\nprint(int(total / w))\n</code></pre>"},{"location":"easy/#shopaholic","title":"Shopaholic","text":"Solution in Python Python <pre><code>n = int(input())\nc = [int(d) for d in input().split()]\nc = sorted(c, reverse=True)\ngroups = [c[i : i + 3] if i + 3 &lt; n else c[i:] for i in range(0, n, 3)]\nprint(sum(g[-1] if len(g) == 3 else 0 for g in groups))\n</code></pre>"},{"location":"easy/#shopping-list-easy","title":"Shopping List (Easy)","text":"Solution in Python Python <pre><code>n, m = [int(d) for d in input().split()]\nitems = []\nfor _ in range(n):\nitems.append(set(input().split()))\nans = items[0]\nans = ans.intersection(*items[1:])\nprint(len(ans))\nprint(\"\\n\".join(sorted(list(ans))))\n</code></pre>"},{"location":"easy/#sibice","title":"Sibice","text":"Solution in Python Python <pre><code>import math\nn, w, h = [int(d) for d in input().split()]\nfor _ in range(n):\nline = int(input())\nif line &lt;= math.sqrt(w**2 + h**2):\nprint(\"DA\")\nelse:\nprint(\"NE\")\n</code></pre>"},{"location":"easy/#digit-product","title":"Digit Product","text":"Solution in Python Python <pre><code>def digit_product(x):\nans = 1\nwhile x:\nans *= x % 10 or 1\nx //= 10\nreturn ans\nx = int(input())\nwhile True:\nx = digit_product(x)\nif x &lt; 10:\nbreak\nprint(x)\n</code></pre>"},{"location":"easy/#simon-says","title":"Simon Says","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\ncommand = input()\nstart = \"Simon says \"\nif command.startswith(start):\nprint(command[len(start) :])\n</code></pre>"},{"location":"easy/#simple-addition","title":"Simple Addition","text":"Solution in Python Python <pre><code>a, b = input(), input()\na = a[::-1]\nb = b[::-1]\ni = 0\nans = \"\"\ncarry = 0\nwhile i &lt; len(a) or i &lt; len(b):\nif i &lt; len(a) and i &lt; len(b):\ns = int(a[i]) + int(b[i]) + carry\nelif i &lt; len(a):\ns = int(a[i]) + carry\nelse:\ns = int(b[i]) + carry\nans += str(s % 10)\ncarry = s // 10\ni += 1\nif carry:\nans += str(carry)\nprint(ans[::-1])\n# or simply\n# print(int(a) + int(b))\n</code></pre>"},{"location":"easy/#sjecista","title":"Sjecista","text":"Solution in Python Python <pre><code>n = int(input())\nprint((n - 3) * (n - 2) * (n - 1) * (n) // 24)\n</code></pre>"},{"location":"easy/#skener","title":"Skener","text":"Solution in Python Python <pre><code>r, _, zr, zc = [int(d) for d in input().split()]\nmatrix = []\nfor _ in range(r):\nmatrix.append(input())\nans = []\nfor row in matrix:\nfor i in range(zr):\nans.append(row)\nfor row in ans:\nprint(\"\".join([col * zc for col in row]))\n</code></pre>"},{"location":"easy/#skocimis","title":"Skocimis","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a, b, c int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nfmt.Scan(&amp;c)\nx := b - a\ny := c - b\nans := x\nif ans &lt; y {\nans = y\n}\nans -= 1\nfmt.Println(ans)\n}\n</code></pre> <pre><code>a, b, c = [int(d) for d in input().split()]\nprint(max(b - a, c - b) - 1)\n</code></pre>"},{"location":"easy/#turn-it-up","title":"Turn It Up!","text":"Solution in Python Python <pre><code>volume = 7\nfor _ in range(int(input())):\nif input() == \"Skru op!\":\nvolume = min(volume + 1, 10)\nelse:\nvolume = max(volume - 1, 0)\nprint(volume)\n</code></pre>"},{"location":"easy/#slatkisi","title":"Slatkisi","text":"Solution in Python Python <pre><code>c, k = [int(d) for d in input().split()]\nd = 10**k\nc = (c // d) * d + (d if (c % d) / d &gt;= 0.5 else 0)\nprint(c)\n</code></pre>"},{"location":"easy/#smil","title":"SMIL","text":"Solutions in 2 languages JavaPython <pre><code>import java.util.Scanner;\nclass SMIL {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nString m = s.nextLine();\nint size = m.length();\nint i = 0;\nwhile (i &lt; size) {\nif (m.charAt(i) == ':' || m.charAt(i) == ';') {\nif (i + 1 &lt; size &amp;&amp; m.charAt(i + 1) == ')') {\nSystem.out.println(i);\ni += 2;\ncontinue;\n}\nif (i + 2 &lt; size &amp;&amp; m.charAt(i + 1) == '-' &amp;&amp; m.charAt(i + 2) == ')') {\nSystem.out.println(i);\ni += 3;\ncontinue;\n}\n}\ni += 1;\n}\n}\n}\n</code></pre> <pre><code>s = input()\ni = 0\nsize = len(s)\nwhile i &lt; size:\nif s[i] in [\":\", \";\"]:\nif i + 1 &lt; size and s[i + 1] == \")\":\nprint(i)\ni += 2\ncontinue\nif i + 2 &lt; size and s[i + 1] == \"-\" and s[i + 2] == \")\":\nprint(i)\ni += 3\ncontinue\ni += 1\n</code></pre>"},{"location":"easy/#soda-slurper","title":"Soda Slurper","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar e, f, c int\nfmt.Scan(&amp;e)\nfmt.Scan(&amp;f)\nfmt.Scan(&amp;c)\ntotal := 0\ns := e + f\nfor s &gt;= c {\ntotal += s / c\ns = s%c + s/c\n}\nfmt.Println(total)\n}\n</code></pre> <pre><code>e, f, c = [int(d) for d in input().split()]\ntotal = 0\ns = e + f\nwhile s &gt;= c:\ntotal += s // c\ns = s % c + s // c\nprint(total)\n</code></pre>"},{"location":"easy/#sok","title":"Sok","text":"Solution in Python Python <pre><code>a, b, c = [int(d) for d in input().split()]\ni, j, k = [int(d) for d in input().split()]\ns = min(a / i, b / j, c / k)\nprint(a - i * s, b - j * s, c - k * s)\n</code></pre>"},{"location":"easy/#some-sum","title":"Some Sum","text":"Solution in Python Python <pre><code>n = int(input())\nif n == 1:\nprint(\"Either\")\nelif n == 2:\nprint(\"Odd\")\nelif n % 2 == 0:\nprint(\"Even\" if (n / 2) % 2 == 0 else \"Odd\")\nelse:\nprint(\"Either\")\n</code></pre>"},{"location":"easy/#sort","title":"Sort","text":"Solution in Python Python <pre><code>from collections import Counter\nn, c = [int(d) for d in input().split()]\nnum = [int(d) for d in input().split()]\nfreq = Counter(num)\nprint(\n\" \".join(\n[\nstr(d)\nfor d in sorted(\nnum, key=lambda k: (freq[k], n - num.index(k)), reverse=True\n)\n]\n)\n)\n</code></pre>"},{"location":"easy/#sort-of-sorting","title":"Sort of Sorting","text":"Solution in Python Python <pre><code>first = True\nwhile True:\nn = int(input())\nif not n:\nbreak\nelse:\nif not first:\nprint()\nfirst = False\nnames = []\nfor _ in range(n):\nnames.append(input())\nprint(\"\\n\".join(sorted(names, key=lambda k: k[:2])))\n</code></pre>"},{"location":"easy/#sort-two-numbers","title":"Sort Two Numbers","text":"Solutions in 3 languages C++GoPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint a = 0, b = 0;\ncin &gt;&gt; a &gt;&gt; b;\nif (a &lt; b)\n{\ncout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b;\n}\nelse\n{\ncout &lt;&lt; b &lt;&lt; \" \" &lt;&lt; a;\n}\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a, b int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nif a &lt; b {\nfmt.Printf(\"%d %d\\n\", a, b)\n} else {\nfmt.Printf(\"%d %d\\n\", b, a)\n}\n}\n</code></pre> <pre><code>line = input()\na, b = [int(d) for d in line.split()]\nif a &lt; b:\nprint(a, b)\nelse:\nprint(b, a)\n</code></pre>"},{"location":"easy/#soylent","title":"Soylent","text":"Solution in Python Python <pre><code>import math\nfor _ in range(int(input())):\nn = int(input())\nprint(math.ceil(n / 400))\n</code></pre>"},{"location":"easy/#spavanac","title":"Spavanac","text":"Solutions in 3 languages C++JavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint h, m;\ncin &gt;&gt; h &gt;&gt; m;\nint mm = m - 45;\nint borrow = 0;\nif (mm &lt; 0)\n{\nmm += 60;\nborrow = 1;\n}\nint hh = h - borrow;\nif (hh &lt; 0)\n{\nhh += 24;\n}\ncout &lt;&lt; hh &lt;&lt; \" \" &lt;&lt; mm &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass Spavanac {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint h = s.nextInt();\nint m = s.nextInt();\nint mm = m - 45;\nint borrow = 0;\nif (mm &lt; 0) {\nmm += 60;\nborrow = 1;\n}\nint hh = h - borrow;\nif (hh &lt; 0) {\nhh += 24;\n}\nSystem.out.println(hh + \" \" + mm);\n}\n}\n</code></pre> <pre><code>h, m = [int(d) for d in input().split()]\nmm = m - 45\nborrow = 0\nif mm &lt; 0:\nmm += 60\nborrow = 1\nhh = h - borrow\nif hh &lt; 0:\nhh += 24\nprint(hh, mm)\n</code></pre>"},{"location":"easy/#speeding","title":"Speeding","text":"Solution in Python Python <pre><code>n = int(input())\nmile, time, max_speed = 0, 0, 0\nfor _ in range(n):\nt, s = [int(d) for d in input().split()]\nif not t and not s:\ncontinue\nspeed = int((s - mile) / (t - time))\nif speed &gt; max_speed:\nmax_speed = speed\nmile, time = s, t\nprint(max_speed)\n</code></pre>"},{"location":"easy/#speed-limit","title":"Speed Limit","text":"Solution in Python Python <pre><code>while True:\nn = int(input())\nif n == -1:\nbreak\nmiles = 0\nelapsed = 0\nfor _ in range(n):\ns, t = [int(d) for d in input().split()]\nmiles += s * (t - elapsed)\nelapsed = t\nprint(f\"{miles} miles\")\n</code></pre>"},{"location":"easy/#spelling-bee","title":"Spelling Bee","text":"Solution in Python Python <pre><code>hexagon = input()\nc = hexagon[0]\nhexagon = set(list(hexagon))\nn = int(input())\nvalid = []\nfor _ in range(n):\nw = input()\nif c in w and len(w) &gt;= 4 and set(list(w)) &lt;= hexagon:\nvalid.append(w)\nprint(\"\\n\".join(valid))\n</code></pre>"},{"location":"easy/#square-peg","title":"Square Peg","text":"Solution in Python Python <pre><code>l, r = [int(d) for d in input().split()]\nif 2 * (l / 2) ** 2 &lt;= r**2:\nprint(\"fits\")\nelse:\nprint(\"nope\")\n</code></pre>"},{"location":"easy/#statistics","title":"Statistics","text":"Solution in Python Python <pre><code>case_num = 0\nwhile True:\ntry:\nline = input()\nexcept:\nbreak\ncase_num += 1\nnumbers = [int(d) for d in line.split()[1:]]\nprint(f\"Case {case_num}: {min(numbers)} {max(numbers)} {max(numbers)-min(numbers)}\")\n</code></pre>"},{"location":"easy/#sticky-keys","title":"Sticky Keys","text":"Solution in Python Python <pre><code>message = input()\nl = [message[0]]\nfor i in message[1:]:\nif i != l[-1]:\nl.append(i)\nprint(\"\".join(l))\n</code></pre>"},{"location":"easy/#stopwatch","title":"Stopwatch","text":"Solution in Python Python <pre><code>n = int(input())\ntimes = []\nfor _ in range(n):\ntimes.append(int(input()))\nif n % 2:\nprint(\"still running\")\nelse:\nseconds = 0\nfor i in range(0, n, 2):\nseconds += times[i + 1] - times[i]\nprint(seconds)\n</code></pre>"},{"location":"easy/#successful-zoom","title":"Successful Zoom","text":"Solution in Python Python <pre><code>n = int(input())\nx = [int(d) for d in input().split()]\nfound = False\nfor k in range(1, n // 2 + 1):\nv = [x[i] for i in range(k - 1, n, k)]\nif all([v[i] &lt; v[i + 1] for i in range(len(v) - 1)]):\nprint(k)\nfound = True\nbreak\nif not found:\nprint(\"ABORT!\")\n</code></pre>"},{"location":"easy/#sum-kind-of-problem","title":"Sum Kind of Problem","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nk, n = [int(d) for d in input().split()]\ns1 = sum(range(1, n + 1))\ns2 = sum(range(1, 2 * n + 1, 2))\ns3 = sum(range(2, 2 * (n + 1), 2))\nprint(k, s1, s2, s3)\n</code></pre>"},{"location":"easy/#sum-of-the-others","title":"Sum of the Others","text":"Solution in Python Python <pre><code>while True:\ntry:\nn = [int(d) for d in input().split()]\nexcept:\nbreak\nfor i in range(len(n)):\nif n[i] == sum([n[j] for j in range(len(n)) if j != i]):\nprint(n[i])\nbreak\n</code></pre>"},{"location":"easy/#sum-squared-digits-function","title":"Sum Squared Digits Function","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nk, b, n = [int(d) for d in input().split()]\nssd = 0\nwhile n:\nssd += (n % b) ** 2\nn //= b\nprint(k, ssd)\n</code></pre>"},{"location":"easy/#sun-and-moon","title":"Sun and Moon","text":"Solution in Python Python <pre><code>sun_years_ago, sun_cycle = [int(v) for v in input().split()]\nmoon_years_ago, moon_cycle = [int(v) for v in input().split()]\nfor t in range(1, 5001):\nif (t + sun_years_ago) % sun_cycle == 0 and (t + moon_years_ago) % moon_cycle == 0:\nprint(t)\nbreak\n</code></pre>"},{"location":"easy/#symmetric-order","title":"Symmetric Order","text":"Solution in Python Python <pre><code>set_num = 0\nwhile True:\nsize = int(input())\nif size == 0:\nbreak\nnames = []\nfor _ in range(size):\nnames.append(input())\nset_num += 1\nprint(f\"SET {set_num}\")\ntop, bottom = [], []\nfor i in range(1, size, 2):\nbottom.append(names[i])\nfor i in range(0, size, 2):\ntop.append(names[i])\nnames = top + bottom[::-1]\nfor name in names:\nprint(name)\n</code></pre>"},{"location":"easy/#synchronizing-lists","title":"Synchronizing Lists","text":"Solution in Python Python <pre><code>while True:\nn = int(input())\nif not n:\nbreak\na, b = [], []\nfor _ in range(n):\na.append(int(input()))\nfor _ in range(n):\nb.append(int(input()))\nmapping = dict(zip(sorted(a), sorted(b)))\nfor key in a:\nprint(mapping[key])\nprint()\n</code></pre>"},{"location":"easy/#t9-spelling","title":"T9 Spelling","text":"Solution in Python Python <pre><code>n = int(input())\nmapping = {\n\"2\": \"abc\",\n\"3\": \"def\",\n\"4\": \"ghi\",\n\"5\": \"jkl\",\n\"6\": \"mno\",\n\"7\": \"pqrs\",\n\"8\": \"tuv\",\n\"9\": \"wxyz\",\n\"0\": \" \",\n}\nfor i in range(n):\nans = []\nprev = \"\"\nfor c in input():\nfor d, r in mapping.items():\nif c in r:\nif d == prev:\nans.append(\" \")\nans.append(d * (r.index(c) + 1))\nprev = d\nbreak\nprint(f\"Case #{i+1}: {''.join(ans)}\")\n</code></pre>"},{"location":"easy/#tais-formula","title":"Tai's formula","text":"Solution in Python Python <pre><code>n = int(input())\nt1, v1 = [float(d) for d in input().split()]\ntotal = 0\nfor _ in range(n - 1):\nt2, v2 = [float(d) for d in input().split()]\ntotal += (v1 + v2) * (t2 - t1) / 2\nt1, v1 = t2, v2\ntotal /= 1000\nprint(total)\n</code></pre>"},{"location":"easy/#tajna","title":"Tajna","text":"Solution in Python Python <pre><code>s = input()\nl = len(s)\nr = int(l**0.5)\nwhile l % r:\nr -= 1\nc = l // r\nparts = [s[i : i + r] for i in range(0, l, r)]\nprint(\"\".join([\"\".join([row[i] for row in parts]) for i in range(r)]))\n</code></pre>"},{"location":"easy/#tarifa","title":"Tarifa","text":"Solution in Python Python <pre><code>x = int(input())\nn = int(input())\nused = 0\nfor _ in range(n):\nused += int(input())\nprint(x * (n + 1) - used)\n</code></pre>"},{"location":"easy/#temperature-confusion","title":"Temperature Confusion","text":"Solution in Python Python <pre><code>import math\na, b = [int(d) for d in input().split(\"/\")]\nx, y = 5 * a - 160 * b, 9 * b\ngcd = math.gcd(x, y)\nx //= gcd\ny //= gcd\nprint(f\"{x}/{y}\")\n</code></pre>"},{"location":"easy/#test-drive","title":"Test Drive","text":"Solution in Python Python <pre><code>a, b, c = [int(d) for d in input().split()]\nx, y = b - a, c - b\nif x == y:\nprint(\"cruised\")\nelif x * y &lt; 0:\nprint(\"turned\")\nelif abs(y) &gt; abs(x):\nprint(\"accelerated\")\nelse:\nprint(\"braked\")\n</code></pre>"},{"location":"easy/#tetration","title":"Tetration","text":"Solution in Python Python <pre><code>import math\nn = float(input())\nprint(f\"{math.pow(n,1/n):.6f}\")\n</code></pre>"},{"location":"easy/#thanos","title":"Thanos","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\np, r, f = [int(d) for d in input().split()]\ny = 0\nwhile p &lt;= f:\np *= r\ny += 1\nprint(y)\n</code></pre>"},{"location":"easy/#the-grand-adventure","title":"The Grand Adventure","text":"Solution in Python Python <pre><code>mapping = {\"b\": \"$\", \"t\": \"|\", \"j\": \"*\"}\nfor _ in range(int(input())):\na = input()\nbag = []\nearly_fail = False\nfor i in a:\nif i in mapping.values():\nbag.append(i)\nelif i in mapping:\nif not bag or bag.pop() != mapping[i]:\nprint(\"NO\")\nearly_fail = True\nbreak\nif not early_fail:\nprint(\"YES\" if not bag else \"NO\")\n</code></pre>"},{"location":"easy/#the-last-problem","title":"The Last Problem","text":"Solutions in 2 languages GoPython <pre><code>package main\nimport (\n\"bufio\"\n\"fmt\"\n\"os\"\n)\nfunc main() {\nscanner := bufio.NewScanner(os.Stdin)\nscanner.Scan()\ns := scanner.Text()\nfmt.Println(\"Thank you,\", s+\",\", \"and farewell!\")\n}\n</code></pre> <pre><code>print(f\"Thank you, {input()}, and farewell!\")\n</code></pre>"},{"location":"easy/#this-aint-your-grandpas-checkerboard","title":"This Ain't Your Grandpa's Checkerboard","text":"Solution in Python Python <pre><code>n = int(input())\nb = []\nfor _ in range(n):\nb.append(input())\ndef check(b, n):\nfor row in b:\nif row.count(\"W\") != row.count(\"B\"):\nreturn False\nfor j in range(0, n - 3):\nif row[j] == row[j + 1] == row[j + 2]:\nreturn False\nfor i in range(n):\ncol = [\"\".join(row[i]) for row in b]\nif col.count(\"W\") != col.count(\"B\"):\nreturn False\nfor j in range(0, n - 3):\nif col[j] == col[j + 1] == col[j + 2]:\nreturn False\nreturn True\nvalid = check(b, n)\nprint(1 if valid else 0)\n</code></pre>"},{"location":"easy/#stuck-in-a-time-loop","title":"Stuck In A Time Loop","text":"Solutions in 2 languages C++Python <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint a;\ncin &gt;&gt; a;\nfor (int i = 0; i &lt; a; i++)\n{\ncout &lt;&lt; i + 1 &lt;&lt; \" Abracadabra\" &lt;&lt; endl;\n}\n}\n</code></pre> <pre><code>n = int(input())\nfor i in range(n):\nprint(f\"{i+1} Abracadabra\")\n</code></pre>"},{"location":"easy/#toflur","title":"T\u00f6flur","text":"Solution in Python Python <pre><code>n = int(input())\na = sorted([int(d) for d in input().split()])\nscore = sum([(a[j] - a[j + 1]) ** 2 for j in range(n - 1)])\nprint(score)\n</code></pre>"},{"location":"easy/#toilet-seat","title":"Toilet Seat","text":"Solution in Python Python <pre><code>t = input()\ndef u(pos, preference):\nif pos == preference == \"U\":\nreturn 0\nelif pos == preference == \"D\":\nreturn 1\nelif pos == \"U\" and preference == \"D\":\nreturn 2\nelse:\nreturn 1\ndef l(pos, preference):\nif pos == preference == \"U\":\nreturn 1\nelif pos == preference == \"D\":\nreturn 0\nelif pos == \"U\" and preference == \"D\":\nreturn 1\nelse:\nreturn 2\ndef b(pos, preference):\nif pos == preference:\nreturn 0\nelse:\nreturn 1\npu = [u(pos, preference) for pos, preference in zip(t[0] + \"U\" * (len(t) - 2), t[1:])]\npl = [l(pos, preference) for pos, preference in zip(t[0] + \"D\" * (len(t) - 2), t[1:])]\npb = [b(pos, preference) for pos, preference in zip(t[0] + t[1:-1], t[1:])]\nprint(sum(pu))\nprint(sum(pl))\nprint(sum(pb))\n</code></pre>"},{"location":"easy/#tolower","title":"ToLower","text":"Solution in Python Python <pre><code>p, t = [int(d) for d in input().split()]\nscore = 0\nfor _ in range(p):\nsolved = True\nfor _ in range(t):\ns = input()\nif solved:\ns = s[0].lower() + s[1:]\nif s.lower() == s:\ncontinue\nsolved = False\nif solved:\nscore += 1\nprint(score)\n</code></pre>"},{"location":"easy/#touchscreen-keyboard","title":"Touchscreen Keyboard","text":"Solution in Python Python <pre><code>k = [\n\"qwertyuiop\",\n\"asdfghjkl\",\n\"zxcvbnm\",\n]\ndef d(a, b):\nfor r1 in range(3):\nif a in k[r1]:\nc1 = k[r1].index(a)\nbreak\nfor r2 in range(3):\nif b in k[r2]:\nc2 = k[r2].index(b)\nbreak\nreturn abs(c1 - c2) + abs(r1 - r2)\nfor _ in range(int(input())):\nx, n = input().split()\nn, w = int(n), []\nfor _ in range(n):\ny = input()\ndist = sum([d(a, b) for a, b in zip(list(x), list(y))])\nw.append([y, dist])\nprint(\"\\n\".join([f\"{k} {v}\" for k, v in sorted(w, key=lambda k: (k[1], k[0]))]))\n</code></pre>"},{"location":"easy/#transit-woes","title":"Transit Woes","text":"Solution in Python Python <pre><code>s, t, n = [int(d) for d in input().split()]\nds = [int(d) for d in input().split()]\nbs = [int(d) for d in input().split()]\ncs = [int(d) for d in input().split()]\nfor i in range(n):\ns += ds[i]\nif not s % cs[i]:\nwait_b = 0\nelse:\nwait_b = cs[i] - s % cs[i]\ns += wait_b + bs[i]\ns += ds[n]\nif s &lt;= t:\nprint(\"yes\")\nelse:\nprint(\"no\")\n</code></pre>"},{"location":"easy/#tri","title":"Tri","text":"Solution in Python Python <pre><code>from operator import add, sub, truediv, mul\na, b, c = [int(d) for d in input().split()]\nops = {\n\"+\": add,\n\"-\": sub,\n\"*\": mul,\n\"/\": truediv,\n}\nfor op, func in ops.items():\nif a == func(b, c):\nprint(f\"{a}={b}{op}{c}\")\nbreak\nif func(a, b) == c:\nprint(f\"{a}{op}{b}={c}\")\n</code></pre>"},{"location":"easy/#triangle-area","title":"Triangle Area","text":"Solutions in 4 languages C++GoJavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint h, b;\ncin &gt;&gt; h &gt;&gt; b;\ncout &lt;&lt; float(h) * b / 2 &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a, b int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nfmt.Println(float32(a) * float32(b) / 2)\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass TriangleArea {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nfloat a = s.nextFloat();\nint b = s.nextInt();\nSystem.out.println(a * b / 2);\n}\n}\n</code></pre> <pre><code>a, b = [int(d) for d in input().split()]\nprint(a * b / 2)\n</code></pre>"},{"location":"easy/#trik","title":"Trik","text":"Solution in Python Python <pre><code>moves = input()\nball = [1, 0, 0]\nfor move in moves:\nif move == \"A\":\nball[0], ball[1] = ball[1], ball[0]\nif move == \"B\":\nball[1], ball[2] = ball[2], ball[1]\nif move == \"C\":\nball[0], ball[2] = ball[2], ball[0]\nif ball[0]:\nprint(1)\nelif ball[1]:\nprint(2)\nelse:\nprint(3)\n</code></pre>"},{"location":"easy/#triple-texting","title":"Triple Texting","text":"Solution in Python Python <pre><code>from collections import Counter\ns = input()\ntimes = 3\nsize = len(s) // times\nmessages = []\nfor i in range(0, len(s), size):\nmessages.append(s[i : i + size])\noriginal = \"\"\nfor i in range(size):\nchars = [m[i] for m in messages]\nif len(set(chars)) == 1:\noriginal += chars[0]\nelse:\nc = Counter(chars)\noriginal += max(c, key=lambda k: c[k])\nprint(original)\n</code></pre>"},{"location":"easy/#take-two-stones","title":"Take Two Stones","text":"Solutions in 6 languages GoHaskellJavaJavaScriptKotlinPython <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar n int\nfmt.Scan(&amp;n)\nif n%2 == 1 {\nfmt.Println(\"Alice\")\n} else {\nfmt.Println(\"Bob\")\n}\n}\n</code></pre> <pre><code>main = do\ninput &lt;- getLine\nlet n = (read input :: Int)\nif  n `mod` 2  ==  1\nthen putStrLn \"Alice\"\nelse putStrLn \"Bob\"\n</code></pre> <pre><code>import java.util.Scanner;\nclass TakeTwoStones {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint n = s.nextInt();\nif (n % 2 == 1) {\nSystem.out.println(\"Alice\");\n} else {\nSystem.out.println(\"Bob\");\n}\n}\n}\n</code></pre> <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (n) =&gt; {\nif (parseInt(n) % 2) {\nconsole.log(\"Alice\");\n} else {\nconsole.log(\"Bob\");\n}\n});\n</code></pre> <pre><code>fun main() {\n    if (readLine()!!.toInt() % 2 == 1) {\n        println(\"Alice\")\n    } else {\n        println(\"Bob\")\n    }\n}\n</code></pre> <pre><code>if int(input()) % 2:\nprint(\"Alice\")\nelse:\nprint(\"Bob\")\n</code></pre>"},{"location":"easy/#two-sum","title":"Two-sum","text":"Solutions in 4 languages C++GoJavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint a, b;\ncin &gt;&gt; a &gt;&gt; b;\ncout &lt;&lt; a + b &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a, b int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nfmt.Println(a + b)\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass TwoSum {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint a = s.nextInt();\nint b = s.nextInt();\nSystem.out.println(a + b);\n}\n}\n</code></pre> <pre><code>line = input()\na, b = [int(d) for d in line.split()]\nprint(a + b)\n</code></pre>"},{"location":"easy/#ultimate-binary-watch","title":"Ultimate Binary Watch","text":"Solution in Python Python <pre><code>t = [int(d) for d in input()]\nb = [f\"{d:b}\".zfill(4) for d in t]\nfor r in range(4):\nrow = [\".\" if b[i][r] == \"0\" else \"*\" for i in range(4)]\nrow.insert(2, \" \")\nprint(\" \".join(row))\n</code></pre>"},{"location":"easy/#undead-or-alive","title":"Undead or Alive","text":"Solution in Python Python <pre><code>s = input()\nsmiley = \":)\" in s\nfrowny = \":(\" in s\nif not frowny and smiley:\nprint(\"alive\")\nelif frowny and not smiley:\nprint(\"undead\")\nelif frowny and smiley:\nprint(\"double agent\")\nelse:\nprint(\"machine\")\n</code></pre>"},{"location":"easy/#unlock-pattern","title":"Unlock Pattern","text":"Solution in Python Python <pre><code>import math\ndef dist(a, b):\nreturn math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2)\ncoords = {}\nfor i in range(3):\nn = [int(d) for d in input().split()]\nfor j in range(3):\ncoords[n[j]] = (i, j)\nvalues = [coords[k] for k in sorted(coords)]\ntotal, prev = 0, 0\nfor i in range(1, 9):\ntotal += dist(values[i], values[prev])\nprev = i\nprint(total)\n</code></pre>"},{"location":"easy/#arrangement","title":"Arrangement","text":"Solution in Python Python <pre><code>import math\nn, m = int(input()), int(input())\nk = math.ceil(m / n)\nfor _ in range(n - (n * k - m)):\nprint(\"*\" * k)\nfor _ in range(n * k - m):\nprint(\"*\" * (k - 1))\n</code></pre>"},{"location":"easy/#vaccine-efficacy","title":"Vaccine Efficacy","text":"Solution in Python Python <pre><code>participants = int(input())\nvaccinated = 0\ncontrol = 0\ninfected_control_a = 0\ninfected_vaccinated_a = 0\ninfected_control_b = 0\ninfected_vaccinated_b = 0\ninfected_control_c = 0\ninfected_vaccinated_c = 0\nfor p in range(participants):\nrecord = input()\nv, a, b, c = list(record)\nif v == \"N\":\ncontrol += 1\nelse:\nvaccinated += 1\nif a == \"Y\":\nif v == \"N\":\ninfected_control_a += 1\nelse:\ninfected_vaccinated_a += 1\nif b == \"Y\":\nif v == \"N\":\ninfected_control_b += 1\nelse:\ninfected_vaccinated_b += 1\nif c == \"Y\":\nif v == \"N\":\ninfected_control_c += 1\nelse:\ninfected_vaccinated_c += 1\ndef get_vaccine_efficacy(infected_vaccinated, vaccinated, infected_control, control):\ninfection_rate_vaccinated = infected_vaccinated / vaccinated\ninfection_rate_control = infected_control / control\nreturn 1 - infection_rate_vaccinated / infection_rate_control\nvaccine_efficacy = [\nget_vaccine_efficacy(\ninfected_vaccinated_a,\nvaccinated,\ninfected_control_a,\ncontrol,\n),\nget_vaccine_efficacy(\ninfected_vaccinated_b,\nvaccinated,\ninfected_control_b,\ncontrol,\n),\nget_vaccine_efficacy(\ninfected_vaccinated_c,\nvaccinated,\ninfected_control_c,\ncontrol,\n),\n]\nfor value in vaccine_efficacy:\nif value &lt;= 0:\nprint(\"Not Effective\")\nelse:\nprint(f\"{value*100:.6f}\")\n</code></pre>"},{"location":"easy/#right-of-way","title":"Right-of-Way","text":"Solution in Python Python <pre><code>d = [\"North\", \"East\", \"South\", \"West\"]\na, b, c = input().split()\nia = d.index(a)\nib = d.index(b)\nic = d.index(c)\nib = (ib - ia) % 4\nic = (ic - ia) % 4\nia -= ia\nif ib == 2:\nprint(\"Yes\" if ic == 3 else \"No\")\nelif ib == 1:\nprint(\"Yes\" if ic in [2, 3] else \"No\")\nelse:\nprint(\"No\")\n</code></pre>"},{"location":"easy/#variable-arithmetic","title":"Variable Arithmetic","text":"Solution in Python Python <pre><code>context = {}\nwhile True:\ns = input()\nif s == \"0\":\nbreak\nif \"=\" in s:\nx, y = [d.strip() for d in s.split(\"=\")]\ncontext[x] = int(y)\nelse:\nv = [d.strip() for d in s.split(\"+\")]\nt = 0\nn = []\nfor d in v:\nif d.isdigit():\nt += int(d)\nelif d in context:\nt += context[d]\nelse:\nn.append(d)\nif len(n) &lt; len(v):\nn = [str(t)] + n\nprint(\" + \".join(n))\n</code></pre>"},{"location":"easy/#veci","title":"Veci","text":"Solution in Python Python <pre><code>from itertools import permutations\nx = input()\nvalues = sorted(set([int(\"\".join(v)) for v in permutations(x, len(x))]))\nindex = values.index(int(x))\nif index + 1 &lt; len(values):\nprint(values[index + 1])\nelse:\nprint(0)\n</code></pre>"},{"location":"easy/#video-speedup","title":"Video Speedup","text":"Solution in Python Python <pre><code>n, p, k = [int(d) for d in input().split()]\ni = [int(d) for d in input().split()]\nstart, total = 0, 0\nspeed = 1\nfor ti in i:\ntotal += speed * (ti - start)\nstart = ti\nspeed += p / 100\ntotal += speed * (k - start)\nprint(f\"{total:.3f}\")\n</code></pre>"},{"location":"easy/#popular-vote","title":"Popular Vote","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nn = int(input())\nvotes = [int(input()) for _ in range(n)]\nlargest = max(votes)\nif votes.count(largest) &gt; 1:\nprint(\"no winner\")\nelse:\ntotal = sum(votes)\nwinner = votes.index(largest)\nprint(\n\"majority\" if votes[winner] &gt; total / 2 else \"minority\",\n\"winner\",\nwinner + 1,\n)\n</code></pre>"},{"location":"easy/#warehouse","title":"Warehouse","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nn = int(input())\nwarehouse = {}\nfor _ in range(n):\ns = input().split()\nname, quantity = s[0], int(s[1])\nif name not in warehouse:\nwarehouse[name] = quantity\nelse:\nwarehouse[name] += quantity\nprint(len(warehouse))\nnames = sorted(warehouse)\nfor name in sorted(\nwarehouse, key=lambda k: (warehouse[k], -names.index(k)), reverse=True\n):\nprint(name, warehouse[name])\n</code></pre>"},{"location":"easy/#weak-vertices","title":"Weak Vertices","text":"Solution in Python Python <pre><code>from itertools import combinations\nwhile True:\nn = int(input())\nif n == -1:\nbreak\ngraph = {}\nfor i in range(n):\ngraph[str(i)] = [str(v) for v, e in zip(range(n), input().split()) if e == \"1\"]\n# listing the weak vertices ordered from least to greatest\n# I guess it means vertex number, not the weakness\n# keys = sorted(graph, key=lambda x: len(graph[x]), reverse=True)\nkeys = graph.keys()\nresult = []\nfor key in keys:\nhas_triangle = False\nfor a, b in combinations(graph[key], 2):\nif a in graph[b] and b in graph[a]:\nhas_triangle = True\nbreak\nif not has_triangle:\nresult.append(key)\nprint(\" \".join(result))\n</code></pre>"},{"location":"easy/#what-does-the-fox-say","title":"What does the fox say?","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\nwords = input().split()\nothers = set()\nwhile True:\nline = input()\nif line == \"what does the fox say?\":\nbreak\nw = line.split()[-1]\nothers.add(w)\nprint(\" \".join(w for w in words if w not in others))\n</code></pre>"},{"location":"easy/#which-is-greater","title":"Which is Greater?","text":"Solutions in 5 languages C++GoJavaJavaScriptPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint a, b;\ncin &gt;&gt; a &gt;&gt; b;\nint ans = (a &gt; b) ? 1 : 0;\ncout &lt;&lt; ans &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <pre><code>package main\nimport \"fmt\"\nfunc main() {\nvar a, b int\nfmt.Scan(&amp;a)\nfmt.Scan(&amp;b)\nif a &gt; b {\nfmt.Println(1)\n} else {\nfmt.Println(0)\n}\n}\n</code></pre> <pre><code>import java.util.Scanner;\nclass WhichisGreater {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint a = s.nextInt();\nint b = s.nextInt();\nif (a&gt;b){\nSystem.out.println(1);\n}else{\nSystem.out.println(0);\n}\n}\n}\n</code></pre> <pre><code>const readline = require(\"readline\");\nconst rl = readline.createInterface(process.stdin, process.stdout);\nrl.question(\"\", (line) =&gt; {\n[a, b] = line\n.trim()\n.split(\" \")\n.map((e) =&gt; parseInt(e));\nif (a &gt; b) {\nconsole.log(1);\n} else {\nconsole.log(0);\n}\n});\n</code></pre> <pre><code>a, b = [int(d) for d in input().split()]\nif a &gt; b:\nprint(1)\nelse:\nprint(0)\n</code></pre>"},{"location":"easy/#wizard-of-odds","title":"Wizard of Odds","text":"Solution in Python Python <pre><code>import math\nn, k = [int(d) for d in input().split()]\nans = math.log(n, 2) &lt;= k\nif ans:\nprint(\"Your wish is granted!\")\nelse:\nprint(\"You will become a flying monkey!\")\n</code></pre>"},{"location":"easy/#yin-and-yang-stones","title":"Yin and Yang Stones","text":"Solution in Python Python <pre><code>s = input()\nprint(1 if s.count(\"W\") == s.count(\"B\") else 0)\n</code></pre>"},{"location":"easy/#yoda","title":"Yoda","text":"Solution in Python Python <pre><code>a, b = input(), input()\nsize = max(len(a), len(b))\na = [int(d) for d in a.zfill(size)]\nb = [int(d) for d in b.zfill(size)]\nans_a = [d1 for d1, d2 in zip(a, b) if d1 &gt;= d2]\nans_b = [d2 for d1, d2 in zip(a, b) if d2 &gt;= d1]\ndef f(ans):\nif not ans:\nreturn \"YODA\"\nelse:\nreturn int(\"\".join([str(d) for d in ans]))\nprint(f(ans_a))\nprint(f(ans_b))\n</code></pre>"},{"location":"easy/#zamka","title":"Zamka","text":"Solution in Python Python <pre><code>l, d, x = input(), input(), input()\nl, d, x = int(l), int(d), int(x)\nfor i in range(l, d + 1):\nif sum([int(d) for d in str(i)]) == x:\nprint(i)\nbreak\nfor i in range(d, l - 1, -1):\nif sum([int(d) for d in str(i)]) == x:\nprint(i)\nbreak\n</code></pre>"},{"location":"easy/#stand-on-zanzibar","title":"Stand on Zanzibar","text":"Solutions in 2 languages JavaPython <pre><code>import java.util.Scanner;\nclass StandOnZanzibar {\npublic static void main(String[] args) {\nScanner s = new Scanner(System.in);\nint t = s.nextInt();\nfor (int i = 0; i &lt; t; i++) {\nint total = 0;\nint n = 0;\nint init = 1;\nwhile (true) {\nn = s.nextInt();\nif (n == 0) {\nbreak;\n}\ntotal += Math.max(n - 2 * init, 0);\ninit = n;\n}\nSystem.out.println(total);\n}\n}\n}\n</code></pre> <pre><code>for _ in range(int(input())):\nnumbers = [int(d) for d in input().split()[:-1]]\ntotal = 0\nfor i in range(1, len(numbers)):\ntotal += max(numbers[i] - 2 * numbers[i - 1], 0)\nprint(total)\n</code></pre>"},{"location":"easy/#un-bear-able-zoo","title":"Un-bear-able Zoo","text":"Solution in Python Python <pre><code>from collections import Counter\nlc = 0\nwhile True:\nn = int(input())\nif not n:\nbreak\nlc += 1\nl = Counter()\nfor _ in range(n):\nanimal = input().lower().split()\nl[animal[-1]] += 1\nprint(f\"List {lc}:\")\nprint(\"\\n\".join([f\"{k} | {l[k]}\" for k in sorted(l)]))\n</code></pre>"},{"location":"easy/#zoom","title":"Zoom","text":"Solution in Python Python <pre><code>n, k = [int(d) for d in input().split()]\nx = [int(d) for d in input().split()]\nprint(\" \".join([str(x[i]) for i in range(k - 1, n, k)]))\n</code></pre>"},{"location":"hard/","title":"Difficulty - Hard (as of 2023-01-16)","text":""},{"location":"hard/#10-kinds-of-people","title":"10 Kinds of People","text":"Solution in Python Python <pre><code># 22/25\nfrom copy import deepcopy\nrow, col = [int(d) for d in input().split()]\nm = []\nfor _ in range(row):\nm.append([int(d) for d in input()])\ndirections = [[0, 1], [0, -1], [1, 0], [-1, 0]]\ndef reachable(m, r1, c1, r2, c2):\n_m = deepcopy(m)\nq = []\nq.append((r1, c1))\nkind = _m[r1][c1]\nwhile len(q):\nr, c = q.pop()\n_m[r][c] = -1\nif (r, c) == (r2, c2):\nreturn True\nfor x, y in directions:\na = r + x\nb = c + y\nif a &gt;= 0 and b &gt;= 0 and a &lt; row and b &lt; col and _m[a][b] == kind:\nq.append((a, b))\nreturn False\nn = int(input())\nfor _ in range(n):\nr1, c1, r2, c2 = [int(d) - 1 for d in input().split()]\nif reachable(m, r1, c1, r2, c2):\nprint(\"decimal\" if m[r1][c1] else \"binary\")\nelse:\nprint(\"neither\")\n</code></pre>"},{"location":"medium/","title":"Difficulty - Medium (as of 2023-02-01)","text":""},{"location":"medium/#1-d-frogger-easy","title":"1-D Frogger (Easy)","text":"Solutions in 2 languages C++Python <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\nint n, s, m, curspace, cnt = 0;\ncin &gt;&gt; n &gt;&gt; s &gt;&gt; m;\nint board[n];\nfor (int i = 0; i &lt; n; i++)\n{\nint tmp;\ncin &gt;&gt; tmp;\nboard[i] = tmp;\n}\ncurspace = s - 1;\nwhile (true)\n{\nif (curspace &lt; 0)\n{\ncout &lt;&lt; \"left\" &lt;&lt; endl;\nbreak;\n}\nelse if (curspace &gt; n - 1)\n{\ncout &lt;&lt; \"right\" &lt;&lt; endl;\nbreak;\n}\nint temp = board[curspace];\nif (temp == 999)\n{\ncout &lt;&lt; \"cycle\" &lt;&lt; endl;\nbreak;\n}\nelse if (temp == m)\n{\ncout &lt;&lt; \"magic\" &lt;&lt; endl;\nbreak;\n}\nelse\n{\ncnt += 1;\nboard[curspace] = 999;\ncurspace += temp;\n}\n}\ncout &lt;&lt; cnt &lt;&lt; endl;\n}\n</code></pre> <pre><code>n, s, m = [int(d) for d in input().split()]\nb = [int(d) for d in input().split()]\nvisited, hops = set(), 0\nwhile True:\nif s in visited:\nprint(\"cycle\")\nbreak\nelif s &lt; 1:\nprint(\"left\")\nbreak\nelif s &gt; n:\nprint(\"right\")\nbreak\nelif b[s - 1] == m:\nprint(\"magic\")\nbreak\nelse:\nvisited.add(s)\ns += b[s - 1]\nhops += 1\nprint(hops)\n</code></pre>"},{"location":"medium/#4-thought","title":"4 thought","text":"Solution in Python Python <pre><code>from itertools import product\nops = [\"+\", \"-\", \"*\", \"//\"]\nfor _ in range(int(input())):\ns = int(input())\nsolved = False\nfor op1, op2, op3 in product(ops, ops, ops):\ne = f\"4 {op1} 4 {op2} 4 {op3} 4\"\ntry:\nans = eval(e) == s\nexcept:\nans = False\nif ans:\nprint(f\"{e.replace('//','/')} = {s}\")\nsolved = True\nbreak\nif not solved:\nprint(\"no solution\")\n</code></pre>"},{"location":"medium/#adding-words","title":"Adding Words","text":"Solution in Python Python <pre><code>name = {}\nvalue = {}\nop = [\"-\", \"+\"]\nwhile True:\ntry:\ns = input().split()\nexcept:\nbreak\nif s[0] == \"clear\":\nname.clear()\nvalue.clear()\nelif s[0] == \"def\":\nn, v = s[1:]\nv = int(v)\nif n in name:\nvalue.pop(name[n])\nname[n] = v\nvalue[v] = n\nelif s[0] == \"calc\":\ntry:\nans = eval(\"\".join([str(name[p]) if p not in op else p for p in s[1:-1]]))\nexcept:\nans = \"unknown\"\nans = value.get(ans, \"unknown\")\nprint(\" \".join(s[1:] + [ans]))\n</code></pre>"},{"location":"medium/#alex-and-barb","title":"Alex and Barb","text":"Solution in Python Python <pre><code>k, m, n = [int(d) for d in input().split()]\nprint(\"Barb\" if k % (m + n) &lt; m else \"Alex\")\n</code></pre>"},{"location":"medium/#another-candies","title":"Another Candies","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\n_ = input()\nn = int(input())\ns = 0\nfor _ in range(n):\ns += int(input())\nif s &gt; n:\ns %= n\nprint(\"NO\" if s % n else \"YES\")\n</code></pre>"},{"location":"medium/#arithmetic","title":"Arithmetic","text":"Solution in Python Python <pre><code>import math\nmapping8 = {\n\"0\": \"000\",\n\"1\": \"001\",\n\"2\": \"010\",\n\"3\": \"011\",\n\"4\": \"100\",\n\"5\": \"101\",\n\"6\": \"110\",\n\"7\": \"111\",\n}\nmapping16 = {\n\"0000\": \"0\",\n\"0001\": \"1\",\n\"0010\": \"2\",\n\"0011\": \"3\",\n\"0100\": \"4\",\n\"0101\": \"5\",\n\"0110\": \"6\",\n\"0111\": \"7\",\n\"1000\": \"8\",\n\"1001\": \"9\",\n\"1010\": \"A\",\n\"1011\": \"B\",\n\"1100\": \"C\",\n\"1101\": \"D\",\n\"1110\": \"E\",\n\"1111\": \"F\",\n}\nb = \"\".join([mapping8[c] for c in input()])\nb = b.zfill(math.ceil(len(b) / 4) * 4)\nans = \"\".join([mapping16[b[i : i + 4]] for i in range(0, len(b), 4)])\nif ans != \"0\":\nans = ans.lstrip(\"0\")\nprint(ans)\n</code></pre>"},{"location":"medium/#catalan-numbers","title":"Catalan Numbers","text":"Solution in Python Python <pre><code># https://en.wikipedia.org/wiki/Catalan_number\np = [1]\nfor i in range(10000):\np.append(p[-1] * (i + 1))\nfor _ in range(int(input())):\nn = int(input())\nprint(p[2 * n] // (p[n + 1] * p[n]))\n</code></pre>"},{"location":"medium/#cd","title":"CD","text":"Solution in Python Python <pre><code>while True:\nn, m = [int(d) for d in input().split()]\nif not n and not m:\nbreak\na = [int(input()) for _ in range(n)]\nb = [int(input()) for _ in range(m)]\ntotal, i, j = 0, 0, 0\nwhile i &lt; n and j &lt; m:\nif a[i] == b[j]:\ntotal += 1\ni += 1\nj += 1\nelif a[i] &lt; b[j]:\ni += 1\nelse:\nj += 1\nwhile i &lt; n:\nif a[i] == b[-1]:\ntotal += 1\nbreak\ni += 1\nwhile j &lt; n:\nif a[-1] == b[j]:\ntotal += 1\nbreak\nj += 1\nprint(total)\n</code></pre>"},{"location":"medium/#a-different-problem","title":"A Different Problem","text":"Solution in Python Python <pre><code>while True:\ntry:\nline = input()\nexcept:\nbreak\na, b = [int(d) for d in line.split()]\nprint(abs(a - b))\n</code></pre>"},{"location":"medium/#guess-the-number","title":"Guess the Number","text":"Solution in Python Python <pre><code>start, end = 1, 1000\nwhile True:\nguess = (start + end) // 2\nprint(guess)\nresp = input()\nif resp == \"correct\":\nbreak\nelif resp == \"higher\":\nstart = guess + 1\nelse:\nend = guess\n</code></pre>"},{"location":"medium/#lamps","title":"Lamps","text":"Solution in Python Python <pre><code>h, p = [int(d) for d in input().split()]\ndays = 0\ncost_bulb, cost_lamp = 5, 60\nused_bulb, used_lamp = 0, 0\nwhile True:\ndays += 1\ncost_bulb += 60 * h * p / 100000\ncost_lamp += 11 * h * p / 100000\nused_bulb += h\nused_lamp += h\nif used_bulb &gt; 1000:\ncost_bulb += 5\nused_bulb -= 1000\nif used_lamp &gt; 8000:\ncost_lamp += 60\nused_lamp -= 8000\nif cost_bulb &gt; cost_lamp:\nbreak\nprint(days)\n</code></pre>"},{"location":"medium/#a-list-game","title":"A List Game","text":"Solution in Python Python <pre><code>import math\nx = int(input())\np = 1\ntotal = 0\nwhile x % 2 == 0:\np = 2\nx /= 2\ntotal += 1\nfor i in range(3, math.ceil(math.sqrt(x)) + 1, 2):\nwhile x % i == 0:\np = i\nx /= i\ntotal += 1\nif x &gt; 1:\ntotal += 1\nif p == 1:\ntotal = 1\nprint(total)\n</code></pre>"},{"location":"medium/#a-vicious-pikeman-easy","title":"A Vicious Pikeman (Easy)","text":"Solution in Python Python <pre><code>def f(n, time, l):\ntotal_time, penalty = 0, 0\nfor i, t in enumerate(sorted(l)):\nif total_time + t &gt; time:\nreturn i, penalty\ntotal_time += t\npenalty = (penalty + total_time) % 1_000_000_007\nreturn n, penalty\nn, t = [int(d) for d in input().split()]\na, b, c, t0 = [int(d) for d in input().split()]\nl = [t0]\nfor _ in range(n - 1):\nl.append(((a * l[-1] + b) % c) + 1)\nn, penalty = f(n, t, l)\nprint(n, penalty)\n</code></pre>"},{"location":"medium/#simon-says","title":"Simon Says","text":"Solution in Python Python <pre><code>for _ in range(int(input())):\ncommand = input()\nstart = \"simon says \"\nif command.startswith(start):\nprint(command[len(start) :])\nelse:\nprint()\n</code></pre>"},{"location":"medium/#vector-functions","title":"Vector Functions","text":"Solution in C++ C++ <pre><code>#include \"vectorfunctions.h\"\n#include &lt;algorithm&gt;\nvoid backwards(std::vector&lt;int&gt; &amp;vec)\n{\nvec = std::vector&lt;int&gt;(vec.rbegin(), vec.rend());\n}\nstd::vector&lt;int&gt; everyOther(const std::vector&lt;int&gt; &amp;vec)\n{\nstd::vector&lt;int&gt; ans;\nfor (int i = 0; i &lt; vec.size(); i += 2)\nans.push_back(vec[i]);\nreturn ans;\n}\nint smallest(const std::vector&lt;int&gt; &amp;vec)\n{\nreturn *min_element(vec.begin(), vec.end());\n}\nint sum(const std::vector&lt;int&gt; &amp;vec)\n{\nint ans = 0;\nfor (auto it = begin(vec); it != end(vec); ++it)\n{\nans += *it;\n}\nreturn ans;\n}\nint veryOdd(const std::vector&lt;int&gt; &amp;suchVector)\n{\nint ans = 0;\nfor (int i = 1; i &lt; suchVector.size(); i += 2)\n{\nif (suchVector[i] % 2 == 1)\nans++;\n}\nreturn ans;\n}\n</code></pre>"},{"location":"medium/#wertyu","title":"WERTYU","text":"Solution in Python Python <pre><code>mapping = {\n# row 1\n\"1\": \"`\",\n\"2\": \"1\",\n\"3\": \"2\",\n\"4\": \"3\",\n\"5\": \"4\",\n\"6\": \"5\",\n\"7\": \"6\",\n\"8\": \"7\",\n\"9\": \"8\",\n\"0\": \"9\",\n\"-\": \"0\",\n\"=\": \"-\",\n# row 2\n\"W\": \"Q\",\n\"E\": \"W\",\n\"R\": \"E\",\n\"T\": \"R\",\n\"Y\": \"T\",\n\"U\": \"Y\",\n\"I\": \"U\",\n\"O\": \"I\",\n\"P\": \"O\",\n\"[\": \"P\",\n\"]\": \"[\",\n\"\\\\\": \"]\",\n# row 3\n\"S\": \"A\",\n\"D\": \"S\",\n\"F\": \"D\",\n\"G\": \"F\",\n\"H\": \"G\",\n\"J\": \"H\",\n\"K\": \"J\",\n\"L\": \"K\",\n\";\": \"L\",\n\"'\": \";\",\n# row 4\n\"X\": \"Z\",\n\"C\": \"X\",\n\"V\": \"C\",\n\"B\": \"V\",\n\"N\": \"B\",\n\"M\": \"N\",\n\",\": \"M\",\n\".\": \",\",\n\"/\": \".\",\n\" \": \" \",\n}\nwhile True:\ntry:\ns = input()\nexcept:\nbreak\nprint(\"\".join([mapping[c] for c in s]))\n</code></pre>"},{"location":"medium/#words-for-numbers","title":"Words for Numbers","text":"Solution in Python Python <pre><code>mapping = {\n0: \"zero\",\n1: \"one\",\n2: \"two\",\n3: \"three\",\n4: \"four\",\n5: \"five\",\n6: \"six\",\n7: \"seven\",\n8: \"eight\",\n9: \"nine\",\n10: \"ten\",\n11: \"eleven\",\n12: \"twelve\",\n}\ndef f(d):\nif d &lt; 13:\nreturn mapping[d]\nones = d % 10\nif d &lt; 20:\nreturn {3: \"thir\", 5: \"fif\", 8: \"eigh\"}.get(ones, mapping[ones]) + \"teen\"\ntens = d // 10\nreturn (\n{2: \"twen\", 3: \"thir\", 4: \"for\", 5: \"fif\", 8: \"eigh\"}.get(tens, mapping[tens])\n+ \"ty\"\n+ (\"-\" + mapping[ones] if ones else \"\")\n)\ndef t(w):\nif w.isdigit():\nreturn f(int(w))\nelse:\nreturn w\nwhile True:\ntry:\nwords = input()\nexcept:\nbreak\nprint(\" \".join([t(w) for w in words.split()]))\n</code></pre>"}]}